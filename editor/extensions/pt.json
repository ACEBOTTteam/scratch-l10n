{
	"boost.color.any": "de qualquer cor",
	"boost.color.black": "preto",
	"boost.color.blue": "azul",
	"boost.color.green": "verde",
	"boost.color.red": "vermelho",
	"boost.color.white": "branco",
	"boost.color.yellow": "amarelo",
	"boost.getMotorPosition": "a posição do motor [MOTOR_REPORTER_ID]",
	"boost.getTiltAngle": "o ângulo da inclinação [TILT_DIRECTION]",
	"boost.motorDirection.backward": "para ali",
	"boost.motorDirection.forward": "para aqui",
	"boost.motorDirection.reverse": "ao contrário",
	"boost.motorOff": "desliga o motor [MOTOR_ID]",
	"boost.motorOn": "liga o motor [MOTOR_ID]",
	"boost.motorOnFor": "roda o motor [MOTOR_ID] durante [DURATION] s",
	"boost.motorOnForRotation": "roda o motor [MOTOR_ID] [ROTATION] rotações",
	"boost.seeingColor": "está a ver um tijolo [COLOR]",
	"boost.setLightHue": "altera a cor da luz para [HUE]",
	"boost.setMotorDirection": "altera a direcção do motor [MOTOR_ID] para [MOTOR_DIRECTION]",
	"boost.setMotorPower": "altera a velocidade do motor [MOTOR_ID] para [POWER] %",
	"boost.tiltDirection.any": "para qualquer lado",
	"boost.tiltDirection.down": "para baixo",
	"boost.tiltDirection.left": "para a esquerda",
	"boost.tiltDirection.right": "para a direita",
	"boost.tiltDirection.up": "cima",
	"boost.whenColor": "Quando vir o tijolo [COLOR] ",
	"boost.whenTilted": "Quando for inclinado [TILT_DIRECTION_ANY]",
	"ev3.beepNote": "toca a nota [NOTE] durante [TIME]s",
	"ev3.buttonPressed": "o botão [PORT] está a ser pressionado",
	"ev3.getBrightness": "o brilho",
	"ev3.getDistance": "a distância",
	"ev3.getMotorPosition": "a posição do motor [PORT]",
	"ev3.motorSetPower": "altera a potência do motor [PORT] para [POWER]%",
	"ev3.motorTurnClockwise": "roda o motor [PORT] para aqui durante [TIME] s",
	"ev3.motorTurnCounterClockwise": "roda o motor [PORT]para ali durante [TIME] s",
	"ev3.whenBrightnessLessThan": "Quando o brilho for menor que [DISTANCE]",
	"ev3.whenButtonPressed": "Quando o botão [PORT] for pressionado",
	"ev3.whenDistanceLessThan": "Quando a distância for menor que [DISTANCE]",
	"gdxfor.getAcceleration": "a aceleração [DIRECTION]",
	"gdxfor.getForce": "a força",
	"gdxfor.getSpin": "a velocidade de rotação [DIRECTION]",
	"gdxfor.getTilt": "o ângulo de inclinação [TILT]",
	"gdxfor.isFreeFalling": "a cair",
	"gdxfor.isTilted": "está inclinado [TILT]",
	"gdxfor.pulled": "for puxado",
	"gdxfor.pushed": "for empurrado",
	"gdxfor.shaken": "for abanado",
	"gdxfor.startedFalling": "começar a cair",
	"gdxfor.tiltDirectionMenu.any": "para qualquer lado",
	"gdxfor.tiltDirectionMenu.back": "para trás",
	"gdxfor.tiltDirectionMenu.front": "para a frente",
	"gdxfor.tiltDirectionMenu.left": "para a esquerda",
	"gdxfor.tiltDirectionMenu.right": "para a direita",
	"gdxfor.turnedFaceDown": "está com a face para baixo",
	"gdxfor.turnedFaceUp": "está com a face para cima",
	"gdxfor.whenForcePushedOrPulled": "Quando o sensor de força [PUSH_PULL]",
	"gdxfor.whenGesture": "Quando [GESTURE]",
	"gdxfor.whenTilted": "Quando for inclinado [TILT]",
	"makeymakey.downArrow": "seta para baixo",
	"makeymakey.downArrowShort": "baixo",
	"makeymakey.leftArrow": "seta para a esquerda",
	"makeymakey.leftArrowShort": "esquerda",
	"makeymakey.rightArrow": "seta para a direita",
	"makeymakey.rightArrowShort": "direita",
	"makeymakey.spaceKey": "espaço",
	"makeymakey.upArrow": "seta para cima",
	"makeymakey.upArrowShort": "cima",
	"makeymakey.whenKeyPressed": "Quando a tecla [KEY] for pressionada",
	"makeymakey.whenKeysPressedInOrder": "Quando [SEQUENCE] forem pressionadas por ordem",
	"microbit.buttonsMenu.any": "qualquer",
	"microbit.clearDisplay": "apaga o ecrã",
	"microbit.defaultTextToDisplay": "Ola!",
	"microbit.displaySymbol": "mostra [MATRIX]",
	"microbit.displayText": "mostra o texto [TEXT]",
	"microbit.gesturesMenu.jumped": "saltar",
	"microbit.gesturesMenu.moved": "se mover",
	"microbit.gesturesMenu.shaken": "for abanado",
	"microbit.isButtonPressed": "o botão [BTN] está a ser pressionado",
	"microbit.isTilted": "está inclinado [DIRECTION]",
	"microbit.pinStateMenu.off": "desligado",
	"microbit.pinStateMenu.on": "ligado",
	"microbit.tiltAngle": "o ângulo da inclinação [DIRECTION]",
	"microbit.tiltDirectionMenu.any": "para qualquer lado",
	"microbit.tiltDirectionMenu.back": "para trás",
	"microbit.tiltDirectionMenu.front": "para a frente",
	"microbit.tiltDirectionMenu.left": "para a esquerda",
	"microbit.tiltDirectionMenu.right": "para a direita",
	"microbit.whenButtonPressed": "Quando o botão [BTN] for pressionado",
	"microbit.whenGesture": "Quando [GESTURE]",
	"microbit.whenPinConnected": "Quando o pino [PIN] for ligado",
	"microbit.whenTilted": "Quando for inclinado [DIRECTION]",
	"music.categoryName": "Música",
	"music.changeTempo": "adiciona [TEMPO] bpm ao teu andamento",
	"music.drumBass": "(2) Bombo",
	"music.drumBongo": "(13) Bongo",
	"music.drumCabasa": "(15) Cabaça",
	"music.drumClaves": "(9) Clavas",
	"music.drumClosedHiHat": "(6) Pratos de Choque Fechados",
	"music.drumConga": "(14) Conga",
	"music.drumCowbell": "(11) Caneca",
	"music.drumCrashCymbal": "(4) Prato de Ataque",
	"music.drumCuica": "(18) Cuíca",
	"music.drumGuiro": "(16) Reco-Reco",
	"music.drumHandClap": "(8) Palmas",
	"music.drumOpenHiHat": "(5) Pratos de Choque Abertos",
	"music.drumSideStick": "(3) Golpe no Fuste da Tarola",
	"music.drumSnare": "(1) Caixa",
	"music.drumTambourine": "(7) Pandeireta",
	"music.drumTriangle": "(12) Triângulo",
	"music.drumVibraslap": "(17) Vibraslap",
	"music.drumWoodBlock": "(10) Bloco Sonoro",
	"music.getTempo": "o andamento",
	"music.instrumentBass": "(6) Baixo",
	"music.instrumentBassoon": "(14) Fagote",
	"music.instrumentCello": "(8) Violoncelo",
	"music.instrumentChoir": "(15) Coro",
	"music.instrumentClarinet": "(10) Clarinete",
	"music.instrumentElectricGuitar": "(5) Guitarra Eléctrica",
	"music.instrumentElectricPiano": "(2) Piano Eléctrico",
	"music.instrumentFlute": "(12) Flauta Transversal",
	"music.instrumentGuitar": "(4) Guitarra",
	"music.instrumentMarimba": "(19) Marimba",
	"music.instrumentMusicBox": "(17) Caixa de Música",
	"music.instrumentOrgan": "(3) Órgão",
	"music.instrumentPiano": "(1) Piano",
	"music.instrumentPizzicato": "(7) Pizzicato",
	"music.instrumentSaxophone": "(11) Saxofone",
	"music.instrumentSteelDrum": "(18) Tambor de Aço",
	"music.instrumentSynthLead": "(20) Sintetizador Melódico",
	"music.instrumentSynthPad": "(21) Sintetizador de Fundo",
	"music.instrumentTrombone": "(9) Trombone",
	"music.instrumentVibraphone": "(16) Vibrafone",
	"music.instrumentWoodenFlute": "(13) Flauta de Madeira",
	"music.midiPlayDrumForBeats": "toca a percussão [DRUM] durante [BEATS] tempos",
	"music.midiSetInstrument": "altera o teu instrumento para [INSTRUMENT]",
	"music.playDrumForBeats": "toca a percussão [DRUM] durante [BEATS] tempos",
	"music.playNoteForBeats": "toca a nota [NOTE] durante [BEATS] tempos",
	"music.restForBeats": "faz uma pausa de [BEATS] tempos",
	"music.setInstrument": "altera a teu instrumento para [INSTRUMENT]",
	"music.setTempo": "altera o teu andamento para [TEMPO] bpm",
	"pen.categoryName": "Caneta",
	"pen.changeColorParam": "adiciona a [COLOR_PARAM] da tua caneta o valor [VALUE]",
	"pen.changeHue": "adiciona [HUE] à cor da tua caneta",
	"pen.changeShade": "adiciona [SHADE] ao tom da tua caneta",
	"pen.changeSize": "adiciona [SIZE] à espessura da tua caneta",
	"pen.clear": "apaga tudo do palco",
	"pen.colorMenu.brightness": "o brilho",
	"pen.colorMenu.color": "o matiz",
	"pen.colorMenu.saturation": "a saturação",
	"pen.colorMenu.transparency": "a transparência",
	"pen.penDown": "baixa a tua caneta",
	"pen.penUp": "levanta a tua caneta",
	"pen.setColor": "altera a cor da tua caneta para [COLOR]",
	"pen.setColorParam": "altera [COLOR_PARAM] da tua caneta para [VALUE]",
	"pen.setHue": "altera a cor da tua caneta para [HUE]",
	"pen.setShade": "altera o tom da tua caneta para [SHADE]",
	"pen.setSize": "altera a espessura da tua caneta para [SIZE]",
	"pen.stamp": "carimba-te",
	"speech.defaultWhenIHearValue": "vamos a isso",
	"speech.extensionName": "Converter Fala para Texto",
	"speech.listenAndWait": "ouve e espera",
	"speech.speechReporter": "o texto falado",
	"speech.whenIHear": "Quando eu ouvir [PHRASE]",
	"text2speech.alto": "alto",
	"text2speech.categoryName": "Texto para Fala",
	"text2speech.defaultTextToSpeak": "Olá!",
	"text2speech.giant": "gigante",
	"text2speech.kitten": "gatinho",
	"text2speech.setLanguageBlock": "altera a língua para [LANGUAGE]",
	"text2speech.setVoiceBlock": "altera a voz para [VOICE]",
	"text2speech.speakAndWaitBlock": "fala [WORDS]",
	"text2speech.squeak": "guincho",
	"text2speech.tenor": "tenor",
	"translate.categoryName": "Traduzir",
	"translate.defaultTextToTranslate": "olá",
	"translate.translateBlock": "a tradução de [WORDS] para [LANGUAGE]",
	"translate.viewerLanguage": "a língua",
	"videoSensing.categoryName": "Sensores de Vídeo",
	"videoSensing.direction": "a direcção",
	"videoSensing.motion": "o movimento",
	"videoSensing.off": "desligado",
	"videoSensing.on": "ligado",
	"videoSensing.onFlipped": "ligado e espelhado",
	"videoSensing.setVideoTransparency": "altera a transparência do vídeo para [TRANSPARENCY] %",
	"videoSensing.sprite": "ti mesmo",
	"videoSensing.stage": "o palco",
	"videoSensing.videoOn": "[ATTRIBUTE] do vídeo em [SUBJECT]",
	"videoSensing.videoToggle": "altera o estado do vídeo para [VIDEO_STATE]",
	"videoSensing.whenMotionGreaterThan": "Quando o movimento do vídeo exceder [REFERENCE]",
	"wedo2.getDistance": "a distância",
	"wedo2.getTiltAngle": "o ângulo da inclinação [TILT_DIRECTION]",
	"wedo2.isTilted": "está inclinado [TILT_DIRECTION_ANY]",
	"wedo2.motorDirection.backward": "para ali",
	"wedo2.motorDirection.forward": "para aqui",
	"wedo2.motorDirection.reverse": "para trás",
	"wedo2.motorId.a": "o motor A",
	"wedo2.motorId.all": "todos os motores",
	"wedo2.motorId.b": "o motor B",
	"wedo2.motorId.default": "o motor",
	"wedo2.motorOff": "desliga [MOTOR_ID]",
	"wedo2.motorOn": "liga [MOTOR_ID]",
	"wedo2.motorOnFor": "liga [MOTOR_ID] durante [DURATION] s",
	"wedo2.playNoteFor": "toca a nota [NOTE] durante [DURATION] s",
	"wedo2.setLightHue": "altera a cor da luz para [HUE]",
	"wedo2.setMotorDirection": "altera a direcção de [MOTOR_ID] para [MOTOR_DIRECTION]",
	"wedo2.startMotorPower": "altera a potência de [MOTOR_ID] para [POWER]",
	"wedo2.tiltDirection.any": "para qualquer lado",
	"wedo2.tiltDirection.down": "para baixo",
	"wedo2.tiltDirection.left": "para a esquerda",
	"wedo2.tiltDirection.right": "para a direita",
	"wedo2.tiltDirection.up": "para cima",
	"wedo2.whenDistance": "Quando a distância for [OP] [REFERENCE]",
	"wedo2.whenTilted": "Quando for inclinado [TILT_DIRECTION_ANY]",
	"facial_recognition.camera": "Abrir a câmera em uma janela pop-up [ONE]",
	"facial_recognition.gather": "Recolher dados faciais da câmera e rotulá-los como [ONE]",
	"facial_recognition": "Reconhecer um rosto da câmera uma vez",
	"facial_recognition.getFaceResult": "Obter resultado de reconhecimento facial",
	"facial_recognition.getFaceReliability": "Obter confiabilidade do resultado de reconhecimento facial",
	"facial_recognition.faceTracking": "Rastreamento de Face[ONE]",
	"facial_recognition.initFaceGender": "Inicializar reconhecimento de gênero",
	"facial_recognition.faceGender": "Reconhecimento de Género Facial[ONE]",
	"open": "Abrir",
	"close": "Fechar",
	"facialRecognition": "Reconhecimento facial",
	"weather.getWeather": "Obter o clima",
	"weather.getWeatherInfo": "Obter informações meteorológicas para [ONE]",
	"weather.weather": "Clima",
	"weather.maxTemp": "Temperatura Máxima",
	"weather.minTemp": "Temperatura Mínima",
	"weather.pressure": "Pressão ao Nível do Mar",
	"weather.humidity": "Umidade",
	"weather.speed": "Velocidade do Vento",
	"weather.deg": "Direção do Vento",
	"weather.visibility": "Visibilidade",
	"knn.machine.learning": "Aprendizado de Máquina",
	"knn.init": "Inicializar classificador KNN",
	"knn.classify": "Classificar imagem da câmera como [ONE] usando KNN",
	"knn.forecast": "Prever classificação da imagem da câmera usando KNN",
	"knn.getResult": "Obter resultado da classificação KNN",
	"knn.clearTag": "Limpar tag de classificação KNN [ONE]",
	"knn.keepClasses": "Manter modelo de classificação KNN",
	"knn.loadClasses": "Carregar modelo de classificação KNN",
	"knn.clearAll": "Limpar todos os dados do modelo de classificação KNN",
	"knn.clearClassifier": "Liberar classificador KNN",
	"gestureRecognition.gesture.recognition": "Reconhecimento de gestos",
	"gestureRecognition.init": "Inicialização da API do servidor de reconhecimento de gestos - API Key[ONE]API Secret[TWO]",
	"gestureRecognition.result": "Resultado do reconhecimento de gestos com probabilidade de [ONE]",
	"gestureRecognition.heart_a": "Coração A",
	"gestureRecognition.heart_b": "Coração B",
	"gestureRecognition.heart_c": "Coração C",
	"gestureRecognition.heart_d": "Coração D",
	"gestureRecognition.OK": "ok",
	"gestureRecognition.hand_open": "Mão aberta",
	"gestureRecognition.thumb_up": "Aprovado",
	"gestureRecognition.thumb_down": "Reprovado",
	"gestureRecognition.rock": "Rock",
	"gestureRecognition.namaste": "Namaste",
	"gestureRecognition.palm_up": "Palma para cima",
	"gestureRecognition.fist": "Punho fechado",
	"gestureRecognition.index_finger_up": "Dedo indicador para cima",
	"gestureRecognition.double_finger_up": "Dois dedos para cima",
	"gestureRecognition.victory": "Vitória",
	"gestureRecognition.big_v": "Grande V",
	"gestureRecognition.phonecall": "Telefonema",
	"gestureRecognition.beg": "Fazer um reverência",
	"gestureRecognition.thanks": "Obrigado",
	"gestureRecognition": "Reconhecimento de Gestos",
	"carMotor.categoryName": "Carro Inteligente",
	"carMotor.move.value": "mover",
	"carMotor.move": "O carro se move em direção a [ONE], velocidade [TWO]",
	"carMotor.carInit": "inicialização do carro [ONE]",
	"carMotor.run": "O carro anda",
	"carMotor.carGetInstruct": "Obter sinal [ONE]",
	"carMotor.cargetInstructData": "Valor da instrução",
	"carMotor.front": "Frente",
	"carMotor.back": "Traseira",
	"carMotor.left": "Esquerda",
	"carMotor.right": "Direita",
	"carMotor.lf": "Frente esquerda",
	"carMotor.lr": "Traseira esquerda",
	"carMotor.rf": "Frente direita",
	"carMotor.rr": "Traseira direita",
	"carMotor.clockwise": "Sentido horário",
	"carMotor.anticlockwise": "Sentido anti-horário",
	"fourLeggedBionicSpider.categoryName": "Aranha Biônica de Quatro Patas",
	"fourLeggedBionicSpider.init": "Inicialização da aranha [ONE]",
	"fourLeggedBionicSpider.spiderMove": "Mover-se para [ONE]",
	"fourLeggedBionicSpider.spiderMode": "Ativar modo [ONE]",
	"fourLeggedBionicSpider.spiderExecute": "Movimento da aranha",
	"fourLeggedBionicSpider.spiderGetInstruct": "Obter sinal [ONE]",
	"fourLeggedBionicSpider.tcp": "Rede",
	"fourLeggedBionicSpider.uart": "Porta serial",
	"fourLeggedBionicSpider.standby": "Em espera",
	"fourLeggedBionicSpider.lying": "Deitado",
	"fourLeggedBionicSpider.sleep": "Dormir",
	"fourLeggedBionicSpider.greet": "Cumprimentar",
	"fourLeggedBionicSpider.pushup": "Flexão",
	"fourLeggedBionicSpider.fighting": "Lutar",
	"fourLeggedBionicSpider.dancing": "Dançar",
	"fourLeggedBionicSpider.swing": "Balançar",
	"fourLeggedBionicSpider.handsome": "Posar",
	"carMotor.mode.fun": "modo [ONE] do carro",
	"carMotor.execute.mode": "o carro executa o modo personalizado [ONE]",
	"carMotor.speed": "velocidade",
	"carMotor.buzzer": "buzzer",
	"carMotor.track": "seguir linha",
	"carMotor.avoidance": "evitar obstáculos",
	"carMotor.follow": "seguir",
	"carMotor.roundTrack": "seguir linha circular",
	"carMotor.8track": "seguir linha em 8",
	"carMotor.stop": "O carro para",
	"carMotor.move.stop": "Parar",
	"carMotor.forward": "Para frente",
	"carMotor.backward": "Para trás",
	"carMotor.leftMove": "Mover para a esquerda",
	"carMotor.rightMove": "Mover para a direita",
	"fourLeggedBionicSpider.leftMove": "Virar à esquerda",
	"fourLeggedBionicSpider.rightMove": "Virar à direita",
	"ROBOT_ARM": "braço robótico",
	"ROBOT_ARM_START_SERVE": "iniciar serviço de braço robótico[ONE]",
	"ROBOT_ARM_INIT": "inicializar braço robótico chassis[ONE]shoulder[TWO]elbow[THREE]claws[FOUR]",
	"ROBOT_ARM_ACTION": "braço robótico[ONE]",
	"ROBOT_ARM_JOYSTICK": "definir ângulo [ONE][TWO]",
	"ROBOT_ARM_GET_ARM_ANGLE": "obter ângulo do braço robótico[ONE]",
	"ROBOT_ARM_ROCKER": "definir [FOUR]x[ONE]y[TWO]sw[THREE]",
	"ROBOT_ARM_OPEN_MEMORY": "ativar o modo de memória do joystick",
	"ROBOT_ARM_COORD": "controle de coordenadas do braço robótico x[ONE]y[TWO]z[THREE]",
	"ROBOT_ARM_GET_JOYSTICK_COORD": "obter coordenada 3 eixos[ONE]",
	"ROBOT_ARM_ERROR": "ajuste de erro da base do braço robótico[ONE][TWO][THREE]",
	"ROBOT_ARM_MOTION": "modo de memória wifi [ONE]",
	"ROBOT_ARM_RESET": "resetar braço robótico",
	"ROBOT_ARM_NET_INIT": "atualização de dados da porta serial do braço robótico",
	"ROBOT_ARM_GET_COMMAND": "obter sinal [ONE]",
	"ROBOT_ARM_GET_COMMAND_DATA": "obter valor do comando[TWO]",
	"ROBOT_ARM_LEFT_ROCKER": "joystick esquerdo",
	"ROBOT_ARM_RIGHT_ROCKER": "joystick direito",
	"ROBOT_ARM_WEB_SERVER": "página web",
	"ROBOT_ARM_MODE1": "modo 1",
	"ROBOT_ARM_MODE2": "modo 2",
	"ROBOT_ARM_MODE3": "modo 3",
	"ROBOT_ARM_MODE4": "modo 4",
	"ROBOT_ARM_MODE5": "modo 5",
	"ROBOT_ARM_MODE6": "modo 6",
	"ROBOT_ARM_KEEP": "salvar",
	"ROBOT_ARM_RUN": "executar",
	"ROBOT_ARM_CLEAR": "limpar",
	"ROBOT_ARM_OPEN_CLAWS": "abrir garras",
	"ROBOT_ARM_CLOSE_CLAWS": "fechar garras",
	"ROBOT_ARM_UP_ELBOW": "elevar cotovelo",
	"ROBOT_ARM_DOWN_ELBOW": "baixar cotovelo",
	"ROBOT_ARM_UP_SHOULDER": "elevar ombro",
	"ROBOT_ARM_DOWN_SHOULDER": "baixar ombro",
	"ROBOT_ARM_LEFT_CHASSIS": "chassi para a esquerda",
	"ROBOT_ARM_RIGHT_CHASSIS": "chassi para a direita",
	"ROBOT_ARM_CLAWS_SLIDE": "deslizamento das garras",
	"ROBOT_ARM_ELBOW_SLIDE": "deslizamento do cotovelo",
	"ROBOT_ARM_SHOULDER_SLIDE": "deslizamento do ombro",
	"ROBOT_ARM_CHASSIS_SLIDE": "deslizamento do chassi",
	"ROBOT_ARM_CLAWS_INPUT": "entrada das garras",
	"ROBOT_ARM_ELBOW_INPUT": "entrada do cotovelo",
	"ROBOT_ARM_SHOULDER_INPUT": "entrada do ombro",
	"ROBOT_ARM_CHASSIS_INPUT": "entrada do chassi",
	"ROBOT_ARM_DATA_RESRE": "resetar",
	"ROBOT_ARM_KEEP_STATE": "salvar estado",
	"ROBOT_ARM_STOP": "parar",
	"ROBOT_ARM_START": "começar",
	"ROBOT_ARM_XYZ": "executar xyz",
	"ROBOT_ARM_ZERO": "zero",
	"ROBOT_ARM_CLAWS": "garras",
	"ROBOT_ARM_ELBOW": "cotovelo",
	"ROBOT_ARM_SHOULDER": "ombro",
	"ROBOT_ARM_CHASSIS": "chassi",
	"ROBOT_ARM_X": "coordenada espacial x",
	"ROBOT_ARM_Y": "coordenada espacial y",
	"ROBOT_ARM_Z": "coordenada espacial z",
	"carMotor.slider": "controle deslizante",
	"arm_car.arm.init": "inicialização do braço robótico chassi[ONE]ombro[TWO]cotovelo[THREE]pulso[FOUR]garras[FIVE]",
	"arm_car.arm.setAngle": "ajustar o ângulo do braço robótico [ONE] [TWO]",
	"arm_car.arm.wrist": "pulso",
	"arm_car.car.speed": "velocidade do carro",
	"arm_car.arm.wristSlide": "deslizador do pulso",
	"arm_car.arm.wristInput": "entrada do pulso",
	"carMotor.openLED": "acender luz",
	"carMotor.closeLED": "desligar a luz",
	"carMotor.setArmAngleSpeed": "definir o ângulo [ONE] do braço robótico [TWO] velocidade [THREE]",
	"carMotor.car.armExpand": "expansão do braço robótico",
	"carMotor.clearCommand": "limpar comando",
	"bipedRobot.categoryName": "robô bípedo",
	"bipedRobot.bipedRobotSetPin": "configurar coxa esquerda[ONE] panturrilha esquerda[TWO] coxa direita[THREE] panturrilha direita[FOUR]",
	"bipedRobot.bipedRobotRunAction": "executar[ONE] velocidade[TWO]",
	"bipedRobot.bipedRobotCreatAction": "criar ação[ONE]",
	"bipedRobot.bipedRobotSetAngle": "coxa esquerda[ONE]panturrilha esquerda[TWO]coxa direita[THREE]panturrilha direita[FOUR]velocidade[FIVE]",
	"bipedRobot.bipedRobotRun": "executar[ONE]",
	"bipedRobot.bipedRobotServe": "iniciar serviço[ONE]",
	"bipedRobot.bipedRobotGetAppCommand": "obter comando[ONE]",
	"bipedRobot.leftTurn": "virar à esquerda",
	"bipedRobot.rightTurn": "virar à direita",
	"bipedRobot.leftKick": "chute esquerdo",
	"bipedRobot.rightKick": "chute direito",
	"bipedRobot.leftTilt": "inclinação à esquerda",
	"bipedRobot.rightTilt": "inclinação à direita",
	"bipedRobot.leftAnkles": "perna esquerda oscilante",
	"bipedRobot.rightAnkles": "perna direita oscilante",
	"bipedRobot.leftStamp": "pisada esquerda",
	"bipedRobot.rightStamp": "pisada direita",
	"bipedRobot.shadowsStep": "sprintar",
	"bipedRobot.dance": "dançar",
	"bipedRobot.follow": "seguir",
	"bipedRobot.avoid": "evitar",
	"bipedRobot.stop": "parar robô",
	"bipedRobot.reset": "reinicializar robô",
	"ROBOT_ARM_LOOP_RUN": "execução em loop",
	"carMotor.firing.expansion": "expansão de disparo",
	"carMotor.firing.module": "inicialização do módulo de disparo [ONE]",
	"carMotor.firing": "disparo único da boca do cano",
	"carMotor.firing.servoInit": "inicialização do servo de disparo [ONE]",
	"carMotor.firing.servoSetAngle": "definir ângulo do servo de disparo [ONE]",
	"carMotor.camera.module": "expansão da câmera",
	"carMotor.camera.serverInit": "câmera do carro [ONE][TWO] resolução [THREE] inicialização",
	"carMotor.camera.server": "serviço de câmera [ONE]",
	"carMotor.camera.clientIsGetData": "o cliente APP está recebendo dados",
	"carMotor.camera.dataForward": "reencaminhar dados [ONE]",
	"carMotor.camera.carRun": "movimento do carro com câmera",
	"carMotor.item.firing": "disparo",
	"carMotor.item.firingAngle": "ângulo de disparo",
	"carMotor.item.forwardDirection": "girar para cima",
	"carMotor.item.reverseDirection": "girar para baixo",
	"carMotor.camera.open": "abrir câmera [ONE]",
	"carMotor.camera.frames": "quadros",
	"carMotor.camera.webPageControl": "controle da página web",
	"carMotor.camera.highDefinition": "alta definição",
	"carMotor.camera.mediumQuality": "qualidade média",
	"carMotor.camera.lowQuality": "baixa qualidade",
	"meteorologicalStation.categoryName": "estação meteorológica",
	"meteorologicalStation.server": "meteorológico [ONE]",
	"meteorologicalStation.sendData": "enviar valor [TWO] de [ONE]",
	"meteorologicalStation.light": "luz",
	"meteorologicalStation.uv": "uv",
	"meteorologicalStation.atm": "pressão atmosférica",
	"meteorologicalStation.rain": "gota de chuva",
	"meteorologicalStation.PM25": "PM2.5",
	"meteorologicalStation.wind": "velocidade do vento",
	"meteorologicalStation.tem": "temperatura",
	"meteorologicalStation.hum": "umidade",
	"meteorologicalStation.vibration": "vibração",
	"meteorologicalStation.servo": "servo",
	"meteorologicalStation.all": "todos os sensores",
	"carMotor.item.flipToTheLeft": "girar para a esquerda",
	"carMotor.item.flipToTheRight": "girar para a direita",
	"chart.categoryName": "Gráfico de Dados",
	"chart.showChart": "Abrir Janela do Gráfico",
	"chart.setTitle": "Definir Título do Gráfico [ONE]",
	"chart.setAxisTitle": "Definir Títulos dos Eixos: eixo x [ONE] eixo y [TWO]",
	"chart.inputData": "Inserir dados para [ONE]: eixo x [TWO] eixo y [THREE]",
	"chart.clearData": "Limpar Dados",
	"chart.closeChart": "Fechar Janela do Gráfico",
	"smartHome.categoryName": "casa inteligente",
	"smartHome.server": "casa inteligente [ONE]",
	"smartHome.reset": "redefinir sinal",
	"smartHome.openLED": "ligar luz",
	"smartHome.closeLED": "desligar luz",
	"smartHome.openDoor": "abrir porta",
	"smartHome.closeDoor": "fechar porta",
	"smartHome.openWindow": "abrir janela",
	"smartHome.closeWindow": "fechar janela",
	"smartHome.openLaser": "ligar laser",
	"smartHome.closeLaser": "desligar laser",
	"smartHome.openRGB": "ligar rgb",
	"smartHome.closeRGB": "desligar rgb",
	"smartHome.light": "luz",
	"smartHome.PIR": "sensor infravermelho",
	"smartHome.raindrop": "gota de chuva",
	"smartHome.Tem": "temperatura",
	"smartHome.Hum": "umidade",
	"smartFarm.categoryName": "fazenda inteligente",
	"smartFarm.server": "fazenda inteligente [ONE]",
	"smartFarm.openFeeder": "abrir alimentador",
	"smartFarm.closeFeeder": "fechar alimentador",
	"smartFarm.waterLevel": "nível de água",
	"smartFarm.soilMoisture": "umidade do solo",
	"carMotor.continuous.firing": "boca do cano [ONE] disparo contínuo",
	"carMotor.bluetoothController.expansion.name": "controlador bluetooth",
	"carMotor.bluetoothController.connect": "conectar controlador bluetooth [ONE]",
	"carMotor.bluetoothController.isConnect": "controlador bluetooth conectado",
	"carMotor.bluetoothController.buttons": "controlador bluetooth [ONE] está [TWO]",
	"carMotor.bluetoothController.disConnect": "desconectar",
	"carMotor.bluetoothController.move": "controlador bluetooth [ONE] está se movendo",
	"carMotor.bluetoothController.getData": "valor [TWO] do controlador bluetooth [ONE]",
	"carMotor.bluetoothController.leftUp": "frontal esquerdo",
	"carMotor.bluetoothController.leftDown": "traseiro esquerdo",
	"carMotor.bluetoothController.rightUp": "frontal direito",
	"carMotor.bluetoothController.rightDown": "traseiro direito",
	"carMotor.bluetoothController.pressDown": "pressionado",
	"carMotor.bluetoothController.undo": "liberado",
	"ASR.categoryName": "Reconhecimento de voz",
	"ASR.sound_config": "Configuração de som Pronúncia[ONE] Volume[TWO] Velocidade[THREE]",
	"ASR.turn_on_the_radio": "Transmissão inicial[ONE] Timeout[TWO]s",
	"ASR.wakeword": "Sensibilidade de ativação[ONE] Palavra-chave[TWO] Resposta de ativação[THREE]",
	"ASR.exit_reply": "Resposta de saída por timeout[ONE]",
	"ASR.initiative_exit": "Comando de saída proativo[ONE] Resposta[TWO]",
	"ASR.command_recognition_sensitivity": "Sensibilidade de reconhecimento de comando[ONE]",
	"ASR.recognition_command": "Nome da ação[ONE] ID[TWO] Palavra do comando[THREE] Resposta[FOUR] Saída da porta[FIVE]",
	"ASR.sweet_girl": "Voz doce de menina",
	"ASR.cute_girl_voice": "Voz fofa de menina",
	"ASR.vivacious_female_voice": "Voz vivaz de menina",
	"ASR.male_announcer": "Locutor masculino",
	"ASR.naive_boy_voice": "Voz de menino ingênuo",
	"ASR.childs_voice": "Voz de criança",
	"carMotor.bluetoothControllerRealTime.expansion.name": "controlador online",
	"carMotor.bluetoothControllerRealTime.buttons": "controle [ONE] está [TWO]",
	"carMotor.bluetoothControllerRealTime.getData": "controle [ONE] [TWO] valor",
	"carMotor.bluetoothController.online": "modo online",
	"carMotor.bluetoothController.offline": "modo offline",
	"carMotor.bluetoothController.multithreading": "multithreading",
	"carMotor.camera.led": "câmera[ONE]",
	"carMotor.camera.Commant": "câmera obter comando [ONE]",
	"ASR.LOW": "baixo",
	"ASR.MIDDLE": "médio",
	"ASR.HIGH": "alto",
	"KNN.RESULT.POSSIBILITY": "possibilidade do resultado de reconhecimento",
	"sharnbot.app_init": "inicialização do aplicativo sharkbot",
	"sharnbot.get_commant": "sharkbot obter comando [ONE]",
	"sharnbot.get_commantData": "sharkbot obter valor do comando [ONE]",
	"sharnbot.execute": "sharkbot movimento",
	"sharnbot.setRGB_color": "luz rgb [ONE] [TWO]",
	"sharnbot.setRGB": "luz rgb [ONE] vermelho [TWO] verde [THREE] azul [FOUR]",
	"sharnbot.IR_getData": "receptor infravermelho recebeu [ONE] pressionado",
	"sharnbot.Ultrasonic_launch": "emissão ultrassônica",
	"sharnbot.Ultrasonic_get_time": "tempo de propagação do ultrassom",
	"sharnbot.P_Buzzer": "frequência do buzzer [ONE]hz duração [TWO]s",
	"sharnbot.Trace_getData": "valor do sensor de linha [ONE]",
	"sharnbot.speed_move": "movimento com valor pwm [ONE] [TWO]",
	"sharnbot.time_move": "movimento com valor pwm [ONE] [TWO], duração de [THREE] segundos",
	"sharnbot.setPWM": "definir valor pwm para o motor esquerdo [ONE] e o motor direito [TWO]",
	"sharnbot.encoder_init": "inicialização do codificador [ONE]",
	"sharnbot.encoder_num": "número de pulsos do codificador [ONE]",
	"sharnbot.encoder_reset": "reinicializar o codificador [ONE]",
	"sharnbot.rotationAngle": "o motor esquerdo gira [ONE] voltas, o motor direito gira [TWO]",
	"sharnbot.rotationAngle_time": "os motores giram nas velocidades [ONE] e [TWO], duração [THREE] segundos",
	"sharnbot.rotationAngle_speed": "os motores giram nas velocidades [ONE] e [TWO]",
	"sharnbot.ASR_init": "inicialização do reconhecimento de voz",
	"sharnbot.ASR_get_command": "obter comando de reconhecimento de voz",
	"sharnbot.PLACES.left": "esquerda",
	"sharnbot.PLACES.right": "direita",
	"sharnbot.PLACES.all": "todos",
	"sharnbot.RUN.forward": "avançar",
	"sharnbot.RUN.backward": "retroceder",
	"sharnbot.RUN.turnLeft": "virar à esquerda",
	"sharnbot.RUN.turnRight": "virar à direita",
	"sharnbot.WHELL.left": "roda esquerda",
	"sharnbot.WHELL.right": "roda direita",
	"sharnbot.COMMANT.lineWalking": "seguindo linha",
	"sharnbot.COMMANT.left_light": "luz esquerda",
	"sharnbot.COMMANT.right_light": "luz direita",
	"sharnbot.COMMANT.all_light": "todas as luzes",
	"sharnbot.COMMANT.input_forward": "entrada para frente",
	"sharnbot.COMMANT.input_backward": "entrada para trás",
	"sharnbot.COMMANT.input_turnLeft": "entrada para virar à esquerda",
	"sharnbot.COMMANT.input_turnRight": "entrada para virar à direita",
	"sharnbot.COMMANT_DATA.speed": "velocidade",
	"PAW_MPU6050_init": "Inicialização da garra",
	"PAW_MPU6050_getData": "Obtendo dados da garra",
	"PAW_getXYZData": "Obter aceleração [ONE]",
	"PAW_getAngle": "Obter ângulo de desvio do potenciômetro [ONE]",
	"PAW_RPcomparison": "1 potenciômetro [ONE][TWO][THREE] 2 potenciômetro [FOUR][FIVE][SIX] 3 potenciômetro [SEVEN][EIGHT][NINE] 4 potenciômetro [TEN][ELEVEN][TWELEV] 5 potenciômetro [THIRTEEN][FOURTEEN]",
	"PAW_getK1Button": "Botão K1 pressionado",
	"PAW_RP_potValue1": "1 potenciômetro rotativo",
	"PAW_RP_potValue2": "2 potenciômetro rotativo",
	"PAW_RP_potValue3": "3 potenciômetro rotativo",
	"PAW_RP_potValue4": "4 potenciômetro rotativo",
	"PAW_RP_potValue5": "5 potenciômetro rotativo",
	"PAW_and": "e",
	"PAW_or": "ou",
	"PAW_greaterThan": "maior que",
	"PAW_lessThan": "menor que",
	"PAW.categoryName": "Garra Mecânica",
	"sharnbot.P_Buzzer.name": "Frequência do buzzer [ONE] duração [TWO]s"
}