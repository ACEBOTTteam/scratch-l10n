{
	"boost.color.any": "любой цвет",
	"boost.color.black": "черный",
	"boost.color.blue": "синий",
	"boost.color.green": "зеленый",
	"boost.color.red": "красный",
	"boost.color.white": "белый",
	"boost.color.yellow": "желтый",
	"boost.getMotorPosition": "позиция мотора [MOTOR_REPORTER_ID]",
	"boost.getTiltAngle": "угол наклона [TILT_DIRECTION]",
	"boost.motorDirection.backward": "туда",
	"boost.motorDirection.forward": "сюда",
	"boost.motorDirection.reverse": "изменить направление",
	"boost.motorOff": "выключить мотор [MOTOR_ID]",
	"boost.motorOn": "включить мотор [MOTOR_ID]",
	"boost.motorOnFor": "включить мотор [MOTOR_ID] на [DURATION] секунд",
	"boost.motorOnForRotation": "включить мотор [MOTOR_ID] на [ROTATION] оборотов",
	"boost.seeingColor": "виден [COLOR] кирпич?",
	"boost.setLightHue": "установить цвет лампочки [HUE]",
	"boost.setMotorDirection": "установить направление мотора [MOTOR_ID] в [MOTOR_DIRECTION]",
	"boost.setMotorPower": "установить скорость [MOTOR_ID] в [POWER] %",
	"boost.tiltDirection.any": "любая",
	"boost.tiltDirection.down": "вниз",
	"boost.tiltDirection.left": "налево",
	"boost.tiltDirection.right": "направо",
	"boost.tiltDirection.up": "вверх",
	"boost.whenColor": "когда виден [COLOR] кирпич",
	"boost.whenTilted": "когда наклонён [TILT_DIRECTION_ANY]",
	"ev3.beepNote": "играть ноту [NOTE] [TIME] секунд",
	"ev3.buttonPressed": "кнопка [PORT] нажата?",
	"ev3.getBrightness": "яркость",
	"ev3.getDistance": "расстояние",
	"ev3.getMotorPosition": "позиция мотора [PORT]",
	"ev3.motorSetPower": "мотор [PORT] установить мощность [POWER] %",
	"ev3.motorTurnClockwise": "мотор [PORT] повернуть сюда на [TIME] секунд",
	"ev3.motorTurnCounterClockwise": "мотор [PORT] повернуть туда на [TIME] секунд",
	"ev3.whenBrightnessLessThan": "когда яркость < [DISTANCE]",
	"ev3.whenButtonPressed": "когда кнопка [PORT] нажата",
	"ev3.whenDistanceLessThan": "когда расстояние < [DISTANCE]",
	"gdxfor.getAcceleration": "ускорение [DIRECTION]",
	"gdxfor.getForce": "сила",
	"gdxfor.getSpin": "скорость вращения [DIRECTION]",
	"gdxfor.getTilt": "угол наклона [TILT]",
	"gdxfor.isFreeFalling": "падение?",
	"gdxfor.isTilted": "наклонён [TILT]?",
	"gdxfor.pulled": "вытянут",
	"gdxfor.pushed": "нажат",
	"gdxfor.shaken": "встряхнут",
	"gdxfor.startedFalling": "начал падать",
	"gdxfor.tiltDirectionMenu.any": "любая",
	"gdxfor.tiltDirectionMenu.back": "задний",
	"gdxfor.tiltDirectionMenu.front": "передний",
	"gdxfor.tiltDirectionMenu.left": "левый ",
	"gdxfor.tiltDirectionMenu.right": "правый",
	"gdxfor.turnedFaceDown": "повернут лицом вниз",
	"gdxfor.turnedFaceUp": "повернут лицом вверх",
	"gdxfor.whenForcePushedOrPulled": "когда датчик приложения силы [PUSH_PULL]",
	"gdxfor.whenGesture": "когда [GESTURE]",
	"gdxfor.whenTilted": "когда наклонён [TILT]",
	"makeymakey.downArrow": "стрелка вниз",
	"makeymakey.downArrowShort": "вниз",
	"makeymakey.leftArrow": "стрелка влево",
	"makeymakey.leftArrowShort": "влево",
	"makeymakey.rightArrow": "стрелка вправо",
	"makeymakey.rightArrowShort": "направо",
	"makeymakey.spaceKey": "пробел",
	"makeymakey.upArrow": "стрелка вверх",
	"makeymakey.upArrowShort": "вверх",
	"makeymakey.whenKeyPressed": "когда [KEY] клавиша нажата",
	"makeymakey.whenKeysPressedInOrder": "при нажатии по порядку [SEQUENCE]",
	"microbit.buttonsMenu.any": "любой из",
	"microbit.clearDisplay": "очистить дисплей",
	"microbit.defaultTextToDisplay": "Привет!",
	"microbit.displaySymbol": "отобразить [MATRIX]",
	"microbit.displayText": "показать текст [TEXT]",
	"microbit.gesturesMenu.jumped": "подпрыгнули",
	"microbit.gesturesMenu.moved": "передвинулись",
	"microbit.gesturesMenu.shaken": "встряхнули",
	"microbit.isButtonPressed": "[BTN] кнопка нажата?",
	"microbit.isTilted": "наклонён [DIRECTION]?",
	"microbit.pinStateMenu.off": "выключить",
	"microbit.pinStateMenu.on": "включить",
	"microbit.tiltAngle": "угол наклона [DIRECTION]",
	"microbit.tiltDirectionMenu.any": "любой из",
	"microbit.tiltDirectionMenu.back": "назад",
	"microbit.tiltDirectionMenu.front": "вперёд",
	"microbit.tiltDirectionMenu.left": "влево",
	"microbit.tiltDirectionMenu.right": "направо",
	"microbit.whenButtonPressed": "когда [BTN] кнопка нажата",
	"microbit.whenGesture": "когда [GESTURE]",
	"microbit.whenPinConnected": "когда подключён пин [PIN]",
	"microbit.whenTilted": "когда наклонён [DIRECTION]",
	"music.categoryName": "Музыка",
	"music.changeTempo": "изменить темп на [TEMPO]",
	"music.drumBass": "(2) Большой барабан",
	"music.drumBongo": "(13) Бонго",
	"music.drumCabasa": "(15) Кабаса",
	"music.drumClaves": "(9) Клаве",
	"music.drumClosedHiHat": "(16) Закрытый Хай-Хэт",
	"music.drumConga": "(14) Конга",
	"music.drumCowbell": "(11) Ковбелл",
	"music.drumCrashCymbal": "(4) Крэш-тарелка",
	"music.drumCuica": "(18) Куика",
	"music.drumGuiro": "(16) Гуиро",
	"music.drumHandClap": "(8) Хлопок",
	"music.drumOpenHiHat": "(5) Открытый Хай-Хет",
	"music.drumSideStick": "(3) Римшот",
	"music.drumSnare": "(1) Малый барабан",
	"music.drumTambourine": "(7) Бубен",
	"music.drumTriangle": "(12) Треугольник",
	"music.drumVibraslap": "(17) Вибраслэп",
	"music.drumWoodBlock": "(10) Коробочка",
	"music.getTempo": "темп",
	"music.instrumentBass": "(6) Бас",
	"music.instrumentBassoon": "(14) Фагот",
	"music.instrumentCello": "(8) Виолончель",
	"music.instrumentChoir": "(15) Хор",
	"music.instrumentClarinet": "(10) Кларнет",
	"music.instrumentElectricGuitar": "(5) Электрогитара",
	"music.instrumentElectricPiano": "(2) Электрическое пианино",
	"music.instrumentFlute": "(12) Флейта",
	"music.instrumentGuitar": "(4) Гитара",
	"music.instrumentMarimba": "(19) Маримба",
	"music.instrumentMusicBox": "(17) Музыкальная шкатулка",
	"music.instrumentOrgan": "(3) Орган",
	"music.instrumentPiano": "(1) Фортепиано",
	"music.instrumentPizzicato": "(7) Пиццикато",
	"music.instrumentSaxophone": "(11) Саксофон",
	"music.instrumentSteelDrum": "(18) Стальной барабан",
	"music.instrumentSynthLead": "(20) Ведущий синтезатор",
	"music.instrumentSynthPad": "(21) Синтезатор с функциями драм-машины",
	"music.instrumentTrombone": "(9) Тромбон",
	"music.instrumentVibraphone": "(16) Вибрафон",
	"music.instrumentWoodenFlute": "(13) Деревянная флейта",
	"music.midiPlayDrumForBeats": "барабану играть [DRUM]  [BEATS] бита",
	"music.midiSetInstrument": "изменить инструмент на [INSTRUMENT]",
	"music.playDrumForBeats": "барабану играть [DRUM]  [BEATS] бита",
	"music.playNoteForBeats": "играй ноту [NOTE] [BEATS] бита",
	"music.restForBeats": "пауза в течение [BEATS] бит",
	"music.setInstrument": "изменить инструмент на [INSTRUMENT]",
	"music.setTempo": "установить темп [TEMPO]",
	"pen.categoryName": "Перо",
	"pen.changeColorParam": "изменить [COLOR_PARAM] пера на [VALUE]",
	"pen.changeHue": "изменить цвет пера на [HUE]",
	"pen.changeShade": "изменить оттенок пера на [SHADE]",
	"pen.changeSize": "изменить размер пера на [SIZE]",
	"pen.clear": "стереть всё",
	"pen.colorMenu.brightness": "яркость",
	"pen.colorMenu.color": "цвет",
	"pen.colorMenu.saturation": "насыщенность",
	"pen.colorMenu.transparency": "прозрачность",
	"pen.penDown": "опустить перо",
	"pen.penUp": "поднять перо",
	"pen.setColor": "установить для пера цвет [COLOR]",
	"pen.setColorParam": "установить [COLOR_PARAM] пера [VALUE]",
	"pen.setHue": "установить цвет пера [HUE]",
	"pen.setShade": "установить оттенок пера [SHADE]",
	"pen.setSize": "установить размер пера [SIZE]",
	"pen.stamp": "печать",
	"speech.defaultWhenIHearValue": "начать движение",
	"speech.extensionName": "Речь в Текст",
	"speech.listenAndWait": "слушать и ждать",
	"speech.speechReporter": "речь",
	"speech.whenIHear": "когда я слышу [PHRASE]",
	"text2speech.alto": "альт",
	"text2speech.categoryName": "Текст в речь",
	"text2speech.defaultTextToSpeak": "привет",
	"text2speech.giant": "гигант",
	"text2speech.kitten": "котенок",
	"text2speech.setLanguageBlock": "установить [LANGUAGE] язык",
	"text2speech.setVoiceBlock": "установить [VOICE] голос",
	"text2speech.speakAndWaitBlock": "сказать [WORDS] ",
	"text2speech.squeak": "писк",
	"text2speech.tenor": "тенор",
	"translate.categoryName": "Перевести",
	"translate.defaultTextToTranslate": "привет",
	"translate.translateBlock": "перевести [WORDS] на [LANGUAGE]",
	"translate.viewerLanguage": "язык",
	"videoSensing.categoryName": "Видео Распознавание",
	"videoSensing.direction": "направление",
	"videoSensing.motion": "движение",
	"videoSensing.off": "выключить",
	"videoSensing.on": "включить",
	"videoSensing.onFlipped": "включить в обратную",
	"videoSensing.setVideoTransparency": "установить прозрачность видео  [TRANSPARENCY]",
	"videoSensing.sprite": "спрайт",
	"videoSensing.stage": "сцена",
	"videoSensing.videoOn": "видео [ATTRIBUTE]  на [SUBJECT]",
	"videoSensing.videoToggle": "включить видео [VIDEO_STATE]",
	"videoSensing.whenMotionGreaterThan": "когда скорость видео > [REFERENCE]",
	"wedo2.getDistance": "расстояние",
	"wedo2.getTiltAngle": "угол наклона[TILT_DIRECTION]",
	"wedo2.isTilted": "наклонён [TILT_DIRECTION_ANY] ?",
	"wedo2.motorDirection.backward": "туда",
	"wedo2.motorDirection.forward": "сюда",
	"wedo2.motorDirection.reverse": "изменить направление",
	"wedo2.motorId.a": "мотор A",
	"wedo2.motorId.all": "все моторы",
	"wedo2.motorId.b": "мотор B",
	"wedo2.motorId.default": "мотор",
	"wedo2.motorOff": "выключить [MOTOR_ID]",
	"wedo2.motorOn": "включить [MOTOR_ID]",
	"wedo2.motorOnFor": "включить [MOTOR_ID] на [DURATION] секунд",
	"wedo2.playNoteFor": "играть ноту [NOTE] [DURATION] секунд",
	"wedo2.setLightHue": "установить цвет лампочки [HUE]",
	"wedo2.setMotorDirection": "установить направление [MOTOR_ID] в [MOTOR_DIRECTION]",
	"wedo2.startMotorPower": "установить мощность [MOTOR_ID] в [POWER]",
	"wedo2.tiltDirection.any": "любая",
	"wedo2.tiltDirection.down": "вниз",
	"wedo2.tiltDirection.left": "влево",
	"wedo2.tiltDirection.right": "направо",
	"wedo2.tiltDirection.up": "вверх",
	"wedo2.whenDistance": "когда расстояние [OP] [REFERENCE]",
	"wedo2.whenTilted": "когда наклонён [TILT_DIRECTION_ANY]",
	"facial_recognition.camera": "Открыть камеру во всплывающем окне [ONE]",
	"facial_recognition.gather": "Собрать данные о лице с камеры и пометить их как [ONE]",
	"facial_recognition": "Распознать лицо с камеры один раз",
	"facial_recognition.getFaceResult": "Получить результат распознавания лица",
	"facial_recognition.getFaceReliability": "Получить надежность результата распознавания лица",
	"facial_recognition.faceTracking": "Отслеживание лица[ONE]",
	"facial_recognition.initFaceGender": "Инициализировать распознавание пола",
	"facial_recognition.faceGender": "Разпознавание пола лица[ONE]",
	"open": "Открыть",
	"close": "Закрыть",
	"facialRecognition": "Распознавание лиц",
	"weather.getWeather": "Получить погоду",
	"weather.getWeatherInfo": "Получить информацию о погоде для [ONE]",
	"weather.weather": "Погода",
	"weather.maxTemp": "Максимальная температура",
	"weather.minTemp": "Минимальная температура",
	"weather.pressure": "Давление на уровне моря",
	"weather.humidity": "Влажность",
	"weather.speed": "Скорость ветра",
	"weather.deg": "Направление ветра",
	"weather.visibility": "Видимость",
	"knn.machine.learning": "Машинное обучение",
	"knn.init": "Инициализировать классификатор KNN",
	"knn.classify": "Классифицировать изображение с камеры как [ONE] с помощью KNN",
	"knn.forecast": "Прогнозировать классификацию изображения с камеры с помощью KNN",
	"knn.getResult": "Получить результат классификации KNN",
	"knn.clearTag": "Очистить тег классификации KNN [ONE]",
	"knn.keepClasses": "Сохранить модель классификации KNN",
	"knn.loadClasses": "Загрузить модель классификации KNN",
	"knn.clearAll": "Очистить все данные модели классификации KNN",
	"knn.clearClassifier": "Освободить классификатор KNN",
	"gestureRecognition.gesture.recognition": "Распознавание жестов",
	"gestureRecognition.init": "Инициализация сервера распознавания жестов API-ключ [ONE] API-секрет [TWO]",
	"gestureRecognition.result": "Результат распознавания жестов - [ONE] с вероятностью",
	"gestureRecognition.heart_a": "Сердце A",
	"gestureRecognition.heart_b": "Сердце B",
	"gestureRecognition.heart_c": "Сердце C",
	"gestureRecognition.heart_d": "Сердце D",
	"gestureRecognition.OK": "OK",
	"gestureRecognition.hand_open": "Открытая ладонь",
	"gestureRecognition.thumb_up": "Палец вверх",
	"gestureRecognition.thumb_down": "Палец вниз",
	"gestureRecognition.rock": "ROCK",
	"gestureRecognition.namaste": "Намасте",
	"gestureRecognition.palm_up": "Ладонь вверх",
	"gestureRecognition.fist": "Кулак",
	"gestureRecognition.index_finger_up": "Указательный палец вверх",
	"gestureRecognition.double_finger_up": "Два пальца вверх",
	"gestureRecognition.victory": "Победа",
	"gestureRecognition.big_v": "Большая V",
	"gestureRecognition.phonecall": "Телефонный звонок",
	"gestureRecognition.beg": "Умолять",
	"gestureRecognition.thanks": "Спасибо",
	"gestureRecognition": "Распознавание жестов",
	"carMotor.categoryName": "Умная машина",
	"carMotor.move": "двигаться",
	"carMotor.stop": "стоп",
	"carMotor.carInit": "Инициализация сети машины",
	"carMotor.run": "Машина работает",
	"carMotor.carGetInstruct": "сигнал автомобиля [ONE]",
	"carMotor.cargetInstructData": "Значение инструкции",
	"carMotor.front": "Передний",
	"carMotor.back": "Задний",
	"carMotor.left": "Левый",
	"carMotor.right": "Правый",
	"carMotor.lf": "Передний левый",
	"carMotor.lr": "Задний левый",
	"carMotor.rf": "Передний правый",
	"carMotor.rr": "Задний правый",
	"carMotor.clockwise": "По часовой стрелке",
	"carMotor.anticlockwise": "Против часовой стрелки",
	"fourLeggedBionicSpider.categoryName": "Четырехногий бионический паук",
	"fourLeggedBionicSpider.init": "Инициализация паука [ONE]",
	"fourLeggedBionicSpider.spiderMove": "Движение к [ONE]",
	"fourLeggedBionicSpider.spiderMode": "Активировать режим [ONE]",
	"fourLeggedBionicSpider.spiderExecute": "Движение паука",
	"fourLeggedBionicSpider.spiderGetInstruct": "сигнал паука [ONE]",
	"fourLeggedBionicSpider.tcp": "Сеть",
	"fourLeggedBionicSpider.uart": "Серийный порт",
	"fourLeggedBionicSpider.standby": "Режим ожидания",
	"fourLeggedBionicSpider.lying": "Лежать",
	"fourLeggedBionicSpider.sleep": "Спать",
	"fourLeggedBionicSpider.greet": "Приветствие",
	"fourLeggedBionicSpider.pushup": "Отжимания",
	"fourLeggedBionicSpider.fighting": "Борьба",
	"fourLeggedBionicSpider.dancing": "Танцы",
	"fourLeggedBionicSpider.swing": "Качели",
	"fourLeggedBionicSpider.handsome": "Позировать",
	"carMotor.mode.fun": "режим автомобиля [ONE]",
	"carMotor.execute.mode": "выполнить режим [ONE] автомобиля",
	"carMotor.speed": "скорость",
	"carMotor.buzzer": "зуммер",
	"carMotor.track": "трасса",
	"carMotor.avoidance": "избегание препятствий",
	"carMotor.follow": "следовать",
	"carMotor.roundTrack": "круговая трасса",
	"carMotor.8track": "восьмерочная трасса"
}