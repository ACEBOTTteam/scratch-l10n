const fs = require('fs')

/**
 * 积木
 * block = {
 *      "zh-cn":{
 *          ROBOT_SET_TYPE: "设置类型"
 *      }
 * }
 * 
 * 拓展
 * extensions = {
 *      "arm_car.categoryName": "机械臂小车", //拓展名称
 *      "arm_car.init": "机械臂小车初始化",
 * }
 * 
 * 页面
 * interfaceData = {
 *      "gui.modify.searchBlock": "搜索积木",
 * }
 * 
 */

const block = {
  "zh-cn": {
    "ROBOT_INIT_WEB_SERVER": "初始化web服务器端口%1",
    "ROBOT_WEB_DISPOSE_DATA": "web服务器处理请求%1",
    "ROBOT_SEND_DATA_TO_WEB": "web服务器向客户端发送%1数据%2",
    "ROBOT_TEXT": "文本",
    "ROBOT_WEBPAGE": "网页",
    "ROBOT_GET_WEB_DATA": "接收客户端%1的值",
    "ROBOT_STRING": "字符串%1",
    "ROBOT_BREAK": "跳出当前循环",
    "ROBOT_ASYNC_DELAY": "异步延时%1",
    "ROBOT_ROCKER_DATA": "摇杆 x%1y%2sw%3值%4",
    "ROBOT_SERIAL_PORT_BOOLEAN": "串口是否接收数据",
    "ROBOT_GET_SERIAL_PORT_DATA": "串口接收%1",
    "ROBOT_SERIAL_PORT_NULL": "无结束符",
    "ROBOT_OPERATOR_SPLIT_STRING": "用%1分割%2的第%3项",
    "ROBOT_LIST_SET_TYPE": "设置%1数据类型为%2",
    "ROBOT_ULTRAVIOLET_RAY": "紫外线传感器%1",
    "ROBOT_WIND_CUP": "风速计%1",
    "ROBOT_4BUTTON": "四位按键模块%1的%2按键被按下",
    "ROBOT_YELLOW": "黄色",
    "ROBOT_ATMOSPHERIC_PRESSURE": "气压传感器%1",
    "ROBOT_PRESS": "大气压",
    "ROBOT_ALTITUDE": "海拔",
    "ROBOT_BLDC_SWITCH": "直流减速TT电机 IN-%1IN+%2%3",
    "ROBOT_PORT_DATA": "数据",
    "ROBOT_PORT_STRING": "字符",
    "ROBOT_PORT_NUMBER": "数字",
    "ROBOT_GET_SERVO_ANGLE": "获取舵机%1角度",
    "ROBOT_CHAR": "字符%1",
    "ROBOT_LEFT_ROCKER": "左摇杆",
    "ROBOT_RIGHT_ROCKER": "右摇杆",
    "ROBOT_ROCKER_SPEED": "%1 x%2y%3sw%4值%5",
    "ROBOT_WIND_CUP_DATA": "值",
    "ROBOT_WIND_CUP_LEVEL": "等级",
    "ROBOT_ADD_LOG": "串口%1连续打印%2",
    "ROBOT_DELAY_WS": "等待%1毫秒",
    "ROBOT_MULTITHREADING": "多线程",
    "ROBOT_OLED_TYPEfACE": "OLED字体%1",
    "ROBOT_OLED_SET_IMG": "OLED设置x%1y%2图像%3",
    "ROBOT_OLED_FONT_SUN": "太阳",
    "ROBOT_OLED_FONT_RAIN": "下雨",
    "ROBOT_OLED_FONT_ENGLISH1": "英文字体1",
    "ROBOT_OLED_FONT_ENGLISH2": "英文字体2",
    "ROBOT_OLED_FONT_CHIMESE": "中文字体",
    "ROBOT_OLED_FONT_BIG": "大字体",
    "ROBOT_INIT_UDP_SERVER": "UDP服务初始化,端口%1",
    "ROBOT_UDP_CREATE_DATA": "创建 UDP 数据包, IP%1端口%2",
    "ROBOT_UDP_GET_IP": "获取广播IP",
    "ROBOT_UDP_WRITE": "UDP发送数据%1",
    "ROBOT_UDP_IS_DATA": "是否接收到数据",
    "ROBOT_UDP_READ_DATA": "UDP读取数据",
    "ROBOT_BLE_INIT": "低功耗蓝牙设置%1%2",

    "ROBOT_BLE_START": "主机开启蓝牙,名称%1",
    "ROBOT_BLE_SEND": "主机发送数据%1",
    "ROBOT_BLE_DATA": "主机接收到的数据",
    "ROBOT_BLE_GET": "主机接收数据",
    "ROBOT_BLE_CLIEN_IS_CONNECT": "客户端是否连接",
    "ROBOT_BLE_CLENT_CONNECT": "客户端连接蓝牙,名称%1",
    "ROBOT_BLE_CLENT_SEND": "客户端发送数据%1",
    "ROBOT_BLE_CLENT_DATA": "客户端接收到的数据",
    "ROBOT_BLE_CLENT_GET": "客户端接收数据",
    "CATEGORY_ROBOTS_BLE": "低功耗蓝牙",
    "ROBOT_PID_CREATE": "创建PID%1",
    "ROBOT_PID_SET": "PID%1 设置输入值%2输出值%3期望值%4KP%5KI%6KD%7",
    "ROBOT_PID_TYPE": "PID%1 设置工作模式%2",
    "ROBOT_PID_PERIOD": "PID%1 设置计算周期%2",
    "ROBOT_PID_OUTPUT_SCOPE": "PID%1 设置输出范围%2到%3",
    "ROBOT_PID_CALCULATE": "PID%1 计算",
    "ROBOT_MANUAL": "手动",
    "ROBOT_AUTOMATIC": "自动",
    "ROBOT_PID_INPUT": "输入值",
    "ROBOT_PID_OUTPUT": "输出值",
    "ROBOT_PID_TARGET": "期望值",
    "ROBOT_ESPNOW_INIT_MAC": "ESP NOW初始化mac地址%1",
    "ROBOT_ESPNOW_SEND": "ESP NOW发送字符串数据%1",
    "ROBOT_ESPNOW_DATA_CALLBACK": "ESP NOW接收到字符串数据",
    "ROBOT_ESPNOW_GET_DATA": "ESP NOW接收到的字符串数据",
    "ROBOT_ESPNOW_GET_MAC": "mac地址",
    "ROBOT_BLE_IS_CONNECT_HOST": "是否连接到主机",





    "ROBOT_LED": "单色LED%1%2",
	"ROBOT_ON": "打开",
	"ROBOT_OFF": "关闭",
	"ROBOT_LED_LUMINANCE": "单色LED%1设置亮度%2",
	"EVENT_WHENARDUINOBEGIN": "启动程序",
	"ROBOT_IR_RECEIVER_MODULE": "红外接收模块%1接收到%2被按下",
	"ROBOT_ULTRASONIC_SENSOR": "超声波测距(cm)Trig管脚%1Echo管脚%2",
	"ROBOT_HUMIDITY_TEMPERATURE": "温湿度%1值%2",
	"ROBOT_TEMPERATURE": "温度",
	"ROBOT_HUMIDITY": "湿度",
	"ROBOT_DC_MOTOR": "130直流电机IN-%1IN+%2速度为%3",
	"ROBOT_BUTTON_MODULE": "按键%1被按下",
	"ROBOT_PHOTORESISTOR_SENSOR": "光线传感器%1",
	"ROBOT_SOUND_SENSOR": "声音传感器%1",
	"ROBOT_PIR_MOTION_SENSOR": "人体红外%1",
	"ROBOT_MOISTURE_SENSOR": "土壤湿度%1",
	"ROBOT_RAINDROP_SENSOR": "雨滴传感器%1",
	"ROBOT_SG90_MODULE": "舵机%1设置角度为%2",
	"ROBOT_LASER_MODULE": "激光%1%2",
	"ROBOT_P_BUZZER": "蜂鸣器管脚%1频率%2持续时间%3拍",
	"ROBOT_HALF": "二分之一",
	"ROBOT_QUARTER": "四分之一",
	"ROBOT_ONE_EIGHTH": "八分之一",
	"ROBOT_WHOLE_BEAT": "整",
	"ROBOT_DOUBLE_BEAT": "双",
	"ROBOT_MQ4_GAS_SENSOR": "MQ-4气体传感器%1",
	"ROBOT_TRACE_SENSOR_SET": "巡线传感器设置管脚 (R:%1,M:%2,L:%3)",
	"ROBOT_TRACE_SENSOR_GET": "三路巡线%1的取值",
	"ROBOT_POTENTIOMETER": "电位器%1",
	"ROBOT_TOUCH_SENSOR": "触摸传感器%1被触摸",
	"ROBOT_FLAME_SENSOR": "火焰传感器%1",
	"ROBOT_RGB_MODULE": "RGB灯 红色%1%2绿色%3%4蓝色%5%6",
	"ROBOT_SET_TAPE_LIGHTS": "灯带%1%2%3",
	"ROBOT_TAPE_LIGHTS": "灯带%1%2红色%3绿色%4蓝色%5",
	"ROBOT_HUMIDIFIER": "加湿器%1%2",
	"ROBOT_WATER_SENSOR": "水位传感器%1",
	"ROBOT_DIGIT_TUBE_DISPLAY_NUMBER": "四位数码管模块显示数字%1",
	"ROBOT_DIGIT_TUBE_DISPLAY_STRING": "四位数码管模块显示字符串%1",
	"ROBOT_DIGIT_TUBE_DISPLAY_NUMBER_PIN": "四位数码管模块CLK%1DIO%2显示数字%3",
	"ROBOT_DIGIT_TUBE_DISPLAY_STRING_PIN": "四位数码管模块CLK%1DIO%2显示字符串%3",
	"ROBOT_COLOR_SENSOR_LIGHT": "颜色传感器%1灯%2",
	"ROBOT_COLOR_SENSOR_COLORS": "颜色传感器%1",
	"ROBOT_BEIGHTNESS": "亮度",
	"ROBOT_RED": "红色",
	"ROBOT_GREEN": "绿色",
	"ROBOT_BLUE": "蓝色",
	"ROBOT_RFID": "RFID读取ID",
	"ROBOT_LCD_STRING": "LCD x%1y%2显示字符%3",
	"ROBOT_LCD_NUMBER": "LCD x%1y%2显示数字%3",
	"ROBOT_LCD_CLEAR": "LCD清空屏幕",
	"ROBOT_LCD_MODEL": "LCD滚动模式%1%2滚动 显示字符%3%4秒/次",

	"ROBOT_FIRST_ROW": "第一行",
	"ROBOT_SENCOND_ROW": "第二行",
	"ROBOT_ALEFT": "向左",
	"ROBOT_RIGHT": "向右",
	"ROBOT_LCD_FLASH": "LCD闪烁模式%1",
	"ROBOT_ON_THE_BACKLIGHT": "打开背光",
	"ROBOT_OFF_THE_BACKLIGHT": "关闭背光",
	"ROBOT_BLDC": "直流电机%1速度为%2",
	"ROBOT_MP3": "MP3 RX%1TX%2%3",
	"ROBOT_PLAY": "恢复播放",
	"ROBOT_PAUSE": "暂停播放",
	"ROBOT_PREVIOUS": "上一首",
	"ROBOT_NEXT": "下一首",
	"ROBOT_MP3_MODULE_PLAY": "MP3 RX%1TX%2播放第%3首",
	"ROBOT_MP3_MODULE_VOLUME": "MP3 RX%1TX%2设置音量%3",
	"ROBOT_MP3_MODULE_PLAY_OVER": "MP3 RX%1TX%2播放是否停止",
	"ROBOT_VOICE_RECOGNITION": "语音识别模块 RX%1TX%2获取指令值",
	"ROBOT_OPEN_THE_DOOR": "开门",
	"ROBOT_CLOSE_THE_DOOR": "关门",
	"ROBOT_OPEN_THE_WINDOW": "开窗",
	"ROBOT_CLOSE_THE_WINDOW": "关窗",
	"ROBOT_OPEN_THE_BEE": "启动小蜜蜂",
	"ROBOT_CLOSE_THE_BEE": "停止小蜜蜂",
	"ROBOT_OPEN_THE_LIGHT": "开LED灯",
	"ROBOT_CLOSE_THE_LIGHT": "关LED灯",
	"ROBOT_OPEN_THE_LASER": "开激光灯",
	"ROBOT_CLOSE_THE_LASER": "关激光灯",
	"ROBOT_OPEN_THE_COLOR_LIGHT": "打开深渊灯的默认颜色",
	"ROBOT_CLOSE_THE_COLOR_LIGHT": "关闭深渊灯的默认颜色",
	"ROBOT_RELAY_MODULE": "继电器%1%2",
	"ROBOT_OLED_SET": "OLED设置字体尺寸%1",
	"ROBOT_OLED_STRING": "OLED设置 x%1y%2字符%3",
	"ROBOT_OLED_NUMBER": "OLED设置 x%1y%2数字%3",
	"ROBOT_OLED_CLEAR": "OLED清空缓存",
	"ROBOT_PRINT": "串口%1打印%2",
	"ROBOT_WIFI_AP": "开启ap模式名称%1密码%2信道%3",
	"ROBOT_CLOSE_AP": "关闭ap模式",
	"ROBOT_WIFI": "wifi连接名称%1密码%2",
	"ROBOT_WIFI_INFO": "wifi%1",
	"ROBOT_WIFI_INIT_SERVER": "初始化服务器",
	"ROBOT_WIFI_RUN_SERVER": "运行服务器",
	"ROBOT_WIFI_CLIENT": "WIFI客户端是否存在",
	"ROBOT_WIFI_CLIENT_GET": "接收WIFI客户端数据",
	"ROBOT_WIFI_CLIENT_SENT": "向WIFI客户端发送数据%1",
	"ROBOT_WIFI_CLOSE_CLIENT": "WIFI关闭客户端",
	"ROBOT_WIFI_CLIENT_CONNECT": "WIFI客户端是否连接",
	"ROBOT_WIFI_CLIENT_DISPLAY": "WIFI客户端是否可用",
	"ROBOT_WIFI_CLOSE": "WIFI断开连接",
	"ROBOT_WIFI_CONNECT_INFO": "连接信息",
	"ROBOT_WIFI_CONNECT_IP": "IP地址",
	"ROBOT_VIBRATION": "震动传感器%1",

	"ROBOT_BLUE_TOOTH_INIT": "蓝牙初始化%1",
	"ROBOT_BLUE_TOOTH_GET": "蓝牙接收数据",
	"ROBOT_BLUE_TOOTH_SEND": "蓝牙发送数据%1",
	"ROBOT_BLUE_TOOTH_GET_MAC": "蓝牙获取MAC地址",
	"ROBOT_BLUE_TOOTH_CLOSE": "断开蓝牙连接",
	"ROBOT_GET_KEY_BOARD": "获取矩阵键盘 行:%1%2%3%4 列:%5%6%7%8",
	"Blockly.Msg.SET.DATA.TYPE": "设置%1数据类型%2",
	"ROBOT_FLOAT": "浮点数",
	"ROBOT_INT": "整数",
	"SET_DATA_TYPE": "设置%1数据类型%2",
	"OPERATOR_GETSTRING": "获取%1的第 %2 位到第 %3 位",
	"OPERATOR_LOCATION": "获取%1在%2的位置",
	"OPERATOR_CR": "回车",
	"OPERATOR_BR": "换行",
	"OPERATOR_CR_BR": "回车&换行",
	"ROBOT_VOICE_RECOGNITION_INIT": "语音识别模块初始化 RX%1TX%2",
	"ROBOT_GET_TIME": "获取时间",
	"ROBOT_GET_TOUCH_BOARD": "获取触摸键盘键位",
	"STRIN_TO_INT": "将%1转换为整数",
	"ROBOT_GET_CITY_CODE": "当前城市编码",
	"ROBOT_REFRESH_WRATHER": "刷新天气%1",
	"ROBOT_GET_WEATHER_INFO": "获取%1",
	"ROBOT_CITY_NAME": "英语城市名",
	"ROBOT_DIRECTION": "风向",
	"ROBOT_SPEED": "风速",
	"ROBOT_TEMP": "温度",
	"ROBOT_weather": "天气",
	"ROBOT_PM": "pm值",
	"ROBOT_NTP_INIT": "NTP服务器初始化",
	"ROBOT_UPDATE_TIME": "更新时间",
	"ROBOT_GET_TIME_INFO": "获取%1时间",
	"ROBOT_HOUR": "时",
	"ROBOT_MINUTE": "分",
	"ROBOT_SECODE": "秒",
	"ROBOT_WEEK": "星期",
	"ROBOT_TRAFFIC_LIGHT": "交通信号灯 绿灯%1%2 黄灯%3%4 红灯%5%6",
	"ROBOT_INFRARA_PROXIMITY": "红外避障模块%1是否检测到障碍",
	"ROBOT_OLED_SHOW": "OLED 显示屏幕",
	"ROBOT_OLED_INIT": "OLED初始化",
	"ROBOT_GET_WEATHER_DATA": "获取气象数据%1",
	"CATEGORY_ROBOTS_RGB": "RGB灯带",
	"CATEGORY_ROBOTS_Digit_Tube": "四位数码管",
	"CATEGORY_ROBOTS_LCD": "LCD模块",
	"CATEGORY_ROBOTS_MP3": "MP3模块",
	"CATEGORY_ROBOTS_Voice_Recognition": "语音识别",
	"CATEGORY_ROBOTS_OLED": "OLED模块",
	"CATEGORY_ROBOTS_DIGIT": "四位数码管",
	"CATEGORY_ROBOTS_VOICE": "语音识别",
	"CATEGORY_ROBOTS_WIFI": "WIFI模块",
	"CATEGORY_ROBOTS_BLUETOOTH": "蓝牙模块",
	"CATEGORY_ROBOTS_WRATHER": "天气模块",
	"CATEGORY_ROBOTS_ITS": "智能交通",
  }
}

const extensions = {
  "zh-cn": {
    "facial_recognition.camera": "以弹窗形式[ONE]摄像头",
    "facial_recognition.gather": "从摄像头采集人脸数据标记为[ONE]",
    "facial_recognition": "识别一次摄像头的人脸",
    "facial_recognition.getFaceResult": "人脸识别结果",
    "facial_recognition.getFaceReliability": "人脸识别结果可信度",
    "facial_recognition.faceTracking": "人脸追踪[ONE]",
    "facial_recognition.initFaceGender": "初始化性别识别",
    "facial_recognition.faceGender": "识别性别[ONE]",
    "open": "打开",
    "close": "关闭",
    "facialRecognition": "人脸识别",
    "weather.getWeather": "获取天气",
    "weather.getWeatherInfo": "获取[ONE]的天气情况",
    "weather.weather": "天气",
    "weather.maxTemp": "最高气温",
    "weather.minTemp": "最低气温",
    "weather.pressure": "海平面大气压",
    "weather.humidity": "湿度",
    "weather.speed": "风速",
    "weather.deg": "风向",
    "weather.visibility": "能见度",
    "knn.machine.learning": "机器学习",
    "knn.init": "初始化KNN分类器",
    "knn.classify": "KNN将摄像头画面分类为[ONE]",
    "knn.forecast": "KNN识别摄像头画面分类",
    "knn.getResult": "KNN识别分类结果",
    "knn.clearTag": "KNN清除分类标签[ONE]",
    "knn.keepClasses": "KNN保存分类模型",
    "knn.loadClasses": "KNN加载分类模型",
    "knn.clearAll": "KNN清除分类模型数据",
    "knn.clearClassifier": "释放knn分类器",
    "gestureRecognition.gesture.recognition": "识别手势",
    "gestureRecognition.init": "手势识别服务器初始化 API Key[ONE]API Secret[TWO]",
    "gestureRecognition.result": "手势识别结果为[ONE]的概率",
    "gestureRecognition.heart_a": "比心 A",
    "gestureRecognition.heart_b": "比心 B",
    "gestureRecognition.heart_c": "比心 C",
    "gestureRecognition.heart_d": "比心 D",
    "gestureRecognition.OK": "ok",
    "gestureRecognition.hand_open": "手张开",
    "gestureRecognition.thumb_up": "点赞",
    "gestureRecognition.thumb_down": "差评",
    "gestureRecognition.rock": "ROCK",
    "gestureRecognition.namaste": "合十",
    "gestureRecognition.palm_up": "手心向上",
    "gestureRecognition.fist": "握拳",
    "gestureRecognition.index_finger_up": "食指朝上",
    "gestureRecognition.double_finger_up": "双指朝上",
    "gestureRecognition.victory": "胜利",
    "gestureRecognition.big_v": "大V",
    "gestureRecognition.phonecall": "打电话",

    "gestureRecognition.beg": "作揖",
    "gestureRecognition.thanks": "感谢",
    "gestureRecognition": "手势识别",
    "carMotor.categoryName": "智能车",
    "carMotor.move.value": "移动",
    "carMotor.move": "小车向[ONE]运动，速度[TWO]",
    "carMotor.carInit": "小车[ONE]初始化",
    "carMotor.run": "小车运动",
    "carMotor.carGetInstruct": "获取[ONE]信号",
    "carMotor.cargetInstructData": "指令取值",
    "carMotor.front": "前",
    "carMotor.back": "后",
    "carMotor.left": "左",
    "carMotor.right": "右",
    "carMotor.lf": "左前",
    "carMotor.lr": "左后",
    "carMotor.rf": "右前",
    "carMotor.rr": "右后",
    "carMotor.clockwise": "顺时针",
    "carMotor.anticlockwise": "逆时针",
    "fourLeggedBionicSpider.categoryName": "四足仿生蜘蛛",
    "fourLeggedBionicSpider.init": "蜘蛛[ONE]初始化",
    "fourLeggedBionicSpider.spiderMove": "向[ONE]运动",
    "fourLeggedBionicSpider.spiderMode": "启动[ONE]模式",
    "fourLeggedBionicSpider.spiderExecute": "蜘蛛运动",
    "fourLeggedBionicSpider.spiderGetInstruct": "获取[ONE]信号",
    "fourLeggedBionicSpider.tcp": "网络",
    "fourLeggedBionicSpider.uart": "串口",
    "fourLeggedBionicSpider.standby": "待机",
    "fourLeggedBionicSpider.lying": "趴地",
    "fourLeggedBionicSpider.sleep": "睡眠",
    "fourLeggedBionicSpider.greet": "打招呼",
    "fourLeggedBionicSpider.pushup": "俯卧撑",
    "fourLeggedBionicSpider.fighting": "战斗",
    "fourLeggedBionicSpider.dancing": "跳舞",
    "fourLeggedBionicSpider.swing": "摇摆",
    "fourLeggedBionicSpider.handsome": "耍帅",
    "carMotor.mode.fun": "小车[ONE]模式",
    "carMotor.execute.mode": "小车执行自定义[ONE]模式",
    "carMotor.speed": "速度",
    "carMotor.buzzer": "喇叭",
    "carMotor.track": "巡线",
    "carMotor.avoidance": "避障",
    "carMotor.follow": "跟随",
    "carMotor.roundTrack": "圆形巡线",
    "carMotor.8track": "8字形巡线",
    "carMotor.stop": "小车停止",
    "carMotor.move.stop": "停止",
    "carMotor.forward": "前进",
    "carMotor.backward": "后退",
    "carMotor.leftMove": "左移",

    "carMotor.rightMove": "右移",
    "fourLeggedBionicSpider.leftMove": "左转",
    "fourLeggedBionicSpider.rightMove": "右转",
    "ROBOT_ARM": "机械臂",
    "ROBOT_ARM_START_SERVE": "启动机械臂[ONE]服务",
    "ROBOT_ARM_INIT": "机械臂初始化 chassis[ONE]shoulder[TWO]elbow[THREE]claws[FOUR]",
    "ROBOT_ARM_ACTION": "机械臂[ONE]",
    "ROBOT_ARM_JOYSTICK": "设置[ONE]角度[TWO]",
    "ROBOT_ARM_GET_ARM_ANGLE": "获取机械臂[ONE]角度",
    "ROBOT_ARM_ROCKER": "设置[FOUR]x[ONE]y[TWO]sw[THREE]",
    "ROBOT_ARM_OPEN_MEMORY": "开启摇杆记忆模式",
    "ROBOT_ARM_COORD": "机械臂坐标控制 x[ONE]y[TWO]z[THREE]",
    "ROBOT_ARM_GET_JOYSTICK_COORD": "获取3轴坐标[ONE]",
    "ROBOT_ARM_ERROR": "机械臂基座误差调整[ONE][TWO][THREE]",
    "ROBOT_ARM_MOTION": "wifi记忆模式[ONE]",
    "ROBOT_ARM_RESET": "机械臂复位",
    "ROBOT_ARM_NET_INIT": "机械臂串口更新数据",
    "ROBOT_ARM_GET_COMMAND": "获取[ONE]信号",
    "ROBOT_ARM_GET_COMMAND_DATA": "获取指令[TWO]值",
    "ROBOT_ARM_LEFT_ROCKER": "左摇杆",
    "ROBOT_ARM_RIGHT_ROCKER": "右摇杆",
    "ROBOT_ARM_WEB_SERVER": "网页",
    "ROBOT_ARM_MODE1": "模式1",
    "ROBOT_ARM_MODE2": "模式2",
    "ROBOT_ARM_MODE3": "模式3",
    "ROBOT_ARM_MODE4": "模式4",
    "ROBOT_ARM_MODE5": "模式5",
    "ROBOT_ARM_MODE6": "模式6",
    "ROBOT_ARM_KEEP": "保存",
    "ROBOT_ARM_RUN": "运行",
    "ROBOT_ARM_CLEAR": "清除",
    "ROBOT_ARM_OPEN_CLAWS": "爪子打开",
    "ROBOT_ARM_CLOSE_CLAWS": "爪子关闭",
    "ROBOT_ARM_UP_ELBOW": "肘部向上",
    "ROBOT_ARM_DOWN_ELBOW": "肘部向下",
    "ROBOT_ARM_UP_SHOULDER": "肩部向上",
    "ROBOT_ARM_DOWN_SHOULDER": "肩部向下",
    "ROBOT_ARM_LEFT_CHASSIS": "底盘向左",
    "ROBOT_ARM_RIGHT_CHASSIS": "底盘向右",
    "ROBOT_ARM_CLAWS_SLIDE": "爪子滑块",
    "ROBOT_ARM_ELBOW_SLIDE": "肘部滑块",
    "ROBOT_ARM_SHOULDER_SLIDE": "肩部滑块",
    "ROBOT_ARM_CHASSIS_SLIDE": "底盘滑块",
    "ROBOT_ARM_CLAWS_INPUT": "爪子输入",
    "ROBOT_ARM_ELBOW_INPUT": "肘部输入",
    "ROBOT_ARM_SHOULDER_INPUT": "肩部输入",
    "ROBOT_ARM_CHASSIS_INPUT": "底盘输入",
    "ROBOT_ARM_DATA_RESRE": "复位",
    "ROBOT_ARM_KEEP_STATE": "保存状态",
    "ROBOT_ARM_STOP": "结束",
    "ROBOT_ARM_START": "开始",

    "ROBOT_ARM_XYZ": "xyz传入执行",
    "ROBOT_ARM_ZERO": "归零",
    "ROBOT_ARM_CLAWS": "爪子",
    "ROBOT_ARM_ELBOW": "肘部",
    "ROBOT_ARM_SHOULDER": "肩部",
    "ROBOT_ARM_CHASSIS": "底盘",
    "ROBOT_ARM_X": "空间坐标x",
    "ROBOT_ARM_Y": "空间坐标y",
    "ROBOT_ARM_Z": "空间坐标z",
    "carMotor.slider": "滑杆",
    "arm_car.arm.init": "机械臂初始化 chassis[ONE]shoulder[TWO]elbow[THREE]wrist[FOUR]claws[FIVE]",
    "arm_car.arm.setAngle": "设置机械臂[ONE]角度[TWO]",
    "arm_car.arm.wrist": "腕部",
    "arm_car.car.speed": "小车速度",
    "arm_car.arm.wristSlide": "腕部滑块",
    "arm_car.arm.wristInput": "腕部输入",
    "carMotor.openLED": "开灯",
    "carMotor.closeLED": "关灯",
    "carMotor.setArmAngleSpeed": "设置机械臂[ONE]角度[TWO]速度[THREE]",
    "carMotor.car.armExpand": "机械臂拓展",
    "carMotor.clearCommand": "清除指令",
    "bipedRobot.categoryName": "双足机器人",
    "bipedRobot.bipedRobotSetPin": "设置左大腿[ONE]左小腿[TWO]右大腿[THREE]右小腿[FOUR]",
    "bipedRobot.bipedRobotRunAction": "执行[ONE]速度[TWO]",
    "bipedRobot.bipedRobotCreatAction": "创建动作[ONE]",
    "bipedRobot.bipedRobotSetAngle": "左大腿[ONE]左小腿[TWO]右大腿[THREE]右小腿[FOUR]速度[FIVE]",
    "bipedRobot.bipedRobotRun": "执行[ONE]",
    "bipedRobot.bipedRobotServe": "开启[ONE]服务",
    "bipedRobot.bipedRobotGetAppCommand": "获取[ONE]指令",
    "bipedRobot.leftTurn": "左转",
    "bipedRobot.rightTurn": "右转",
    "bipedRobot.leftKick": "左踢",
    "bipedRobot.rightKick": "右踢",
    "bipedRobot.leftTilt": "左倾斜",
    "bipedRobot.rightTilt": "右倾斜",
    "bipedRobot.leftAnkles": "左摇腿",
    "bipedRobot.rightAnkles": "右摇腿",
    "bipedRobot.leftStamp": "左跺脚",
    "bipedRobot.rightStamp": "右跺脚",
    "bipedRobot.shadowsStep": "冲刺",
    "bipedRobot.dance": "跳舞",
    "bipedRobot.follow": "跟随",
    "bipedRobot.avoid": "避障",
    "bipedRobot.stop": "机器人停止",
    "bipedRobot.reset": "机器人复位",
    "ROBOT_ARM_LOOP_RUN": "循环运行",
    "carMotor.firing.expansion": "射击拓展",
    "carMotor.firing.module": "射击模块初始化[ONE]",
    "carMotor.firing": "枪口单次射击",
    "carMotor.firing.servoInit": "射击舵机初始化[ONE]",
    "carMotor.firing.servoSetAngle": "射击舵机设置角度[ONE]",

    "carMotor.camera.module": "摄像头拓展",
    "carMotor.camera.serverInit": "小车摄像头[ONE][TWO] 清晰度[THREE]初始化",
    "carMotor.camera.server": "摄像头[ONE]服务",
    "carMotor.camera.clientIsGetData": "APP客户端是否接收数据",
    "carMotor.camera.dataForward": "转发[ONE]数据",
    "carMotor.camera.carRun": "摄像头小车运动",
    "carMotor.item.firing": "射击",
    "carMotor.item.firingAngle": "射击角度",
    "carMotor.item.forwardDirection": "向上翻转",
    "carMotor.item.reverseDirection": "向下翻转",
    "carMotor.camera.open": "开启摄像头[ONE]",
    "carMotor.camera.frames": "画面",
    "carMotor.camera.webPageControl": "网页控制",
    "carMotor.camera.highDefinition": "高画质",
    "carMotor.camera.mediumQuality": "中画质",
    "carMotor.camera.lowQuality": "低画质",
    "meteorologicalStation.categoryName": "气象站",
    "meteorologicalStation.server": "气象[ONE]",
    "meteorologicalStation.sendData": "发送[ONE]的值[TWO]",
    "meteorologicalStation.light": "光线",
    "meteorologicalStation.uv": "紫外线",
    "meteorologicalStation.atm": "大气压",
    "meteorologicalStation.rain": "雨滴",
    "meteorologicalStation.PM25": "PM2.5",
    "meteorologicalStation.wind": "风速",
    "meteorologicalStation.tem": "温度",
    "meteorologicalStation.hum": "湿度",
    "meteorologicalStation.vibration": "震动",
    "meteorologicalStation.servo": "舵机",
    "meteorologicalStation.all": "所有传感器",
    "carMotor.item.flipToTheLeft": "向左翻转",
    "carMotor.item.flipToTheRight": "向右翻转",
    "chart.categoryName": "数据图表",
    "chart.showChart": "打开图表窗口",
    "chart.setTitle": "设置图表标题[ONE]",
    "chart.setAxisTitle": "设置轴标题: x轴[ONE] y轴[TWO]",
    "chart.inputData": "输入[ONE]的数据: x轴[TWO] y轴[THREE]",
    "chart.clearData": "清除数据",
    "chart.closeChart": "关闭图表窗口",
    "smartHome.categoryName": "智能家居",
    "smartHome.server": "智能家居[ONE]",
    "smartHome.reset": "信号重置",
    "smartHome.openLED": "开灯",
    "smartHome.closeLED": "关灯",
    "smartHome.openDoor": "开门",
    "smartHome.closeDoor": "关门",
    "smartHome.openWindow": "开窗",
    "smartHome.closeWindow": "关窗",
    "smartHome.openLaser": "打开激光",
    "smartHome.closeLaser": "关闭激光",
    "smartHome.openRGB": "打开RGB",

    "smartHome.closeRGB": "关闭RGB",
    "smartHome.light": "光线",
    "smartHome.PIR": "人体红外",
    "smartHome.raindrop": "雨滴",
    "smartHome.Tem": "温度",
    "smartHome.Hum": "湿度",
    "smartFarm.categoryName": "智能农场",
    "smartFarm.server": "智能农场[ONE]",
    "smartFarm.openFeeder": "打开进食器",
    "smartFarm.closeFeeder": "关闭进食器",
    "smartFarm.waterLevel": "水位",
    "smartFarm.soilMoisture": "土壤湿度",
    "carMotor.continuous.firing": "枪口[ONE]连续射击",
    "carMotor.bluetoothController.expansion.name": "蓝牙手柄",
    "carMotor.bluetoothController.connect": "连接蓝牙手柄[ONE]",
    "carMotor.bluetoothController.isConnect": "是否到连接蓝牙手柄",
    "carMotor.bluetoothController.buttons": "蓝牙手柄[ONE]被[TWO]",
    "carMotor.bluetoothController.disConnect": "断开连接",
    "carMotor.bluetoothController.move": "蓝牙手柄[ONE]是否移动",
    "carMotor.bluetoothController.getData": "蓝牙手柄[ONE][TWO]值",
    "carMotor.bluetoothController.leftUp": "左前",
    "carMotor.bluetoothController.leftDown": "左后",
    "carMotor.bluetoothController.rightUp": "右前",
    "carMotor.bluetoothController.rightDown": "右后",
    "carMotor.bluetoothController.pressDown": "按下",
    "carMotor.bluetoothController.undo": "松开",
    "ASR.categoryName": "语音识别",
    "ASR.sound_config": "声音配置 发音[ONE]音量[TWO]语速[THREE]",
    "ASR.turn_on_the_radio": "开机播报[ONE]超时时间[TWO]s",
    "ASR.wakeword": "唤醒灵敏度[ONE]唤醒词[TWO] 唤醒回复[THREE]",
    "ASR.exit_reply": "超时退出回复[ONE]",
    "ASR.initiative_exit": "主动退出命令[ONE]回复[TWO]",
    "ASR.command_recognition_sensitivity": "命令识别灵敏度[ONE]",
    "ASR.recognition_command": "行为名[ONE]ID[TWO]命令词[THREE]回复语[FOUR]端口输出[FIVE]",
    "ASR.sweet_girl": "甜美女声",
    "ASR.cute_girl_voice": "可爱女声",
    "ASR.vivacious_female_voice": "活泼女声",
    "ASR.male_announcer": "男播音员",
    "ASR.naive_boy_voice": "天真男声",
    "ASR.childs_voice": "童声",
    "carMotor.bluetoothControllerRealTime.expansion.name": "在线手柄",
    "carMotor.bluetoothControllerRealTime.buttons": "手柄[ONE]被[TWO]",
    "carMotor.bluetoothControllerRealTime.getData": "手柄[ONE][TWO]值",
    "carMotor.bluetoothController.online": "在线模式",
    "carMotor.bluetoothController.offline": "离线模式",
    "carMotor.bluetoothController.multithreading": "多线程",
    "carMotor.camera.led": "摄像头[ONE]",
    "carMotor.camera.Commant": "摄像头获取[ONE]指令",
    "ASR.LOW": "低",
    "ASR.MIDDLE": "中",
    "ASR.HIGH": "高",

    "KNN.RESULT.POSSIBILITY": "识别结果的可能性",
    "sharnbot.app_init": "sharkbot app 初始化",
    "sharnbot.get_commant": "sharkbot 获取指令[ONE]",
    "sharnbot.get_commantData": "sharkbot 获取指令[ONE]值",
    "sharnbot.execute": "sharkbot 运动",
    "sharnbot.setRGB_color": "RGB灯[ONE][TWO]",
    "sharnbot.setRGB": "RGB灯[ONE]红色[TWO]绿色[THREE]蓝色[FOUR]",
    "sharnbot.IR_getData": "红外接收模块接收到[ONE]被按下",
    "sharnbot.Ultrasonic_launch": "超声波发射",
    "sharnbot.Ultrasonic_get_time": "超声波传播时间",
    "sharnbot.P_Buzzer": "蜂鸣器频率[ONE]hz 持续时间[TWO]s",
    "sharnbot.Trace_getData": "巡线传感器[ONE]的取值",
    "sharnbot.speed_move": "以[ONE]的PWM值[TWO]",
    "sharnbot.time_move": "以[ONE]的PWM值[TWO],持续[THREE]秒",
    "sharnbot.setPWM": "设置PWM值 左电机[ONE]右电机[TWO]",
    "sharnbot.encoder_init": "[ONE]编码器初始化",
    "sharnbot.encoder_num": "[ONE]编码器脉冲数",
    "sharnbot.encoder_reset": "[ONE]编码器重置",
    "sharnbot.rotationAngle": "左编码电机转动[ONE]圈 右编码电机转动[TWO]圈",
    "sharnbot.rotationAngle_time": "编码电机以[ONE]速度[TWO],持续[THREE]秒",
    "sharnbot.rotationAngle_speed": "编码电机以[ONE]速度[TWO]",
    "sharnbot.ASR_init": "语音识别初始化",
    "sharnbot.ASR_get_command": "语音识别获取指令",
    "sharnbot.PLACES.left": "左",
    "sharnbot.PLACES.right": "右",
    "sharnbot.PLACES.all": "全部",
    "sharnbot.RUN.forward": "前进",
    "sharnbot.RUN.backward": "后退",
    "sharnbot.RUN.turnLeft": "左转",
    "sharnbot.RUN.turnRight": "右转",
    "sharnbot.WHELL.left": "左轮",
    "sharnbot.WHELL.right": "右轮",
    "sharnbot.COMMANT.lineWalking": "巡线",
    "sharnbot.COMMANT.left_light": "左灯",
    "sharnbot.COMMANT.right_light": "右灯",
    "sharnbot.COMMANT.all_light": "全部灯",
    "sharnbot.COMMANT.input_forward": "前进输入",
    "sharnbot.COMMANT.input_backward": "后退输入",
    "sharnbot.COMMANT.input_turnLeft": "左转输入",
    "sharnbot.COMMANT.input_turnRight": "右转输入",
    "sharnbot.COMMANT_DATA.speed": "速度",
    "PAW_MPU6050_init": "机械爪初始化",
    "PAW_MPU6050_getData": "机械爪获取数据",
    "PAW_getXYZData": "获取[ONE]加速度",
    "PAW_getAngle": "获取电位器[ONE]偏转角度",
    "PAW_RPcomparison": "1电位器[ONE][TWO][THREE] 2电位器[FOUR][FIVE][SIX] 3电位器[SEVEN][EIGHT][NINE] 4电位器[TEN][ELEVEN][TWELEV] 5电位器[THIRTEEN][FOURTEEN]",
    "PAW_getK1Button": "K1按键被按下",
    "PAW_RP_potValue1": "1旋转电位器",
    "PAW_RP_potValue2": "2旋转电位器",
    "PAW_RP_potValue3": "3旋转电位器",
    "PAW_RP_potValue4": "4旋转电位器",
    "PAW_RP_potValue5": "5旋转电位器",

    "PAW_and": "与",
    "PAW_or": "或",
    "PAW_greaterThan": "大于",
    "PAW_lessThan": "小于",
    "PAW.categoryName": "运动感应手套",
    "sharnbot.P_Buzzer.name": "蜂鸣器频率[ONE] 持续时间[TWO]s",
    "PAW.getCommand": "获取动作指令",
    "PAW.getCommand.bel_led": "蓝牙指示灯[ONE]",
    "carMotor.aabutton.name": "视觉模块",
    "carMotor.visionModule.lcd_init": "LCD屏幕初始化",
    "carMotor.visionModule.lcd_rotation": "LCD屏幕旋转方向[ONE]",
    "carMotor.visionModule.vision_camera_init": "摄像头初始化",
    "carMotor.visionModule.camera_resolution_ratio": "摄像头[ONE]",
    "carMotor.visionModule.color_appoint_recognize": "颜色追踪[ONE]",
    "carMotor.visionModule.get_recognition_data": "获取[ONE]",
    "carMotor.visionModule.get_visionModule_command": "视觉模块获取[ONE]指令",
    "carMotor.visionModule.get_visionModule_command_data": "视觉模块获取[ONE]值",
    "carMotor.menus.qrCode": "二维码识别",
    "carMotor.menus.barCode": "条形码识别",
    "carMotor.menus.num": "数字识别",
    "carMotor.menus.color": "颜色识别",
    "carMotor.menus.image": "图像识别",
    "carMotor.menus.color_red": "颜色跟踪:红色",
    "carMotor.menus.color_blue": "颜色跟踪:蓝色",
    "carMotor.menus.color_green": "颜色跟踪:绿色",
    "carMotor.menus.visionModuleLine": "视觉巡线",
    "carMotor.menus.trafficIdentification": "交通识别",
    "carMotor.menus.machineLearning": "机器学习",
    "carMotor.menus.face": "人脸识别",
    "carMotor.menus.photograph": "拍照",
    "carMotor.menus.x": "x坐标",
    "carMotor.menus.y": "y坐标",
    "carMotor.menus.width": "宽度",
    "carMotor.menus.height": "高度",
    "carMotor.menus.result": "识别结果",
    "carMotor.menus.lineData": "巡线结果",
    "carMotor.menus.QVGA": "高分辨率",
    "carMotor.menus.QQVGA": "低分辨率",
    "carMotor.menus.red": "红色",
    "carMotor.menus.blue": "蓝色",
    "carMotor.menus.green": "绿色"
  },
  "zh-tw": {
    "PAW.categoryName": "運動感應手套"
  },
  "en": {
    "PAW.categoryName": "Motion Sensing Gloves"
  },
  "fr": {
    "PAW.categoryName": "Gants à détection de mouvement"
  },
  "ja": {
    "PAW.categoryName": "モーションセンサーグローブ"
  },
  "de": {
    "PAW.categoryName": "Bewegungserkennende Handschuhe"
  },
  "es": {
    "PAW.categoryName": "Guantes con detección de movimiento"
  },
  "ru": {
    "PAW.categoryName": "Перчатки с датчиками движения"
  },
  "cs": {
    "PAW.categoryName": "Rukavice s detekcí pohybu"
  },
  "it": {
    "PAW.categoryName": "Guanti con sensori di movimento"
  },
  "pl": {
    "PAW.categoryName": "Rękawice z czujnikiem ruchu"
  },
  "tr": {
    "PAW.categoryName": "Hareket Algılayıcı Eldivenler"
  },
  "pt": {
    "PAW.categoryName": "Luvas com sensor de movimento"
  },
  "hr": {
    "PAW.categoryName": "Rukavice s detekcijom pokreta"
  },
  "hi": {
    "PAW.categoryName": "मोशन सेंसिंग दस्ताने"
  },
  "ko": {
    "PAW.categoryName": "모션 감지 장갑"
  },
  "th": {
    "PAW.categoryName": "ถุงมือจับการเคลื่อนไหว"
  },
  "nl": {
    "PAW.categoryName": "Bewegingsgevoelige handschoenen"
  },
  "ar": {
    "PAW.categoryName": "قفازات استشعار الحركة"
  }
}

const interfaceData = {
  "zh-cn": {
    "gui.modify.notConnectd": "未连接",
    "gui.modify.onLineMode": "实时模式",
    "gui.modify.uploadMode": "上传模式",
    "gui.modify.autoGenerate": "自动生成",
    "gui.modify.manualEditing": "手动编辑",
    "gui.modify.upload": "上传到设备",
    "gui.modify.openSerial": "打开串口",
    "gui.modify.closeSerial": "关闭串口",
    "gui.modify.clearOutput": "清除输出",
    "gui.modify.Send": "发送",
    "gui.modify.hexForm": "16进制",
    "gui.modify.lineFeed": "换行符",
    "gui.modify.noLineTerminators": "没有结束符",
    "gui.modify.carriageReturn": "回车",
    "gui.modify.LFAndCR": "回车加换行",
    "gui.modify.uploadProgress": "上传进度",
    "gui.modify.uploadFailure": "上传失败，请查看右下角详情信息！",
    "gui.modify.completeBurning": "烧录完成",
    "gui.modify.burning": "正在烧录，请稍后...",
    "gui.modify.BurningSuccessful": "烧录成功",
    "gui.modify.burningFailure": "烧录失败",
    "gui.modify.baudRate": "波特率",
    "gui.modify.displayStage": "显示舞台",
    "gui.modify.hiddenStage": "显示舞台",
    "gui.modify.noDevicesWereFound": "没有发现任何设备",
    "gui.modify.note": "提示",
    "gui.modify.noteMessage": "是否保存当前项目",
    "gui.modify.save": "保存",
    "gui.modify.notSave": "不保存",
    "gui.modify.newVersion": "新版本：V",
    "gui.modify.updateLater": "稍后更新",
    "gui.modify.updateNow": "立即更新",
    "gui.modify.uploadConnect": "请先连接设备",
    "gui.extension.facial_recognition": "人脸识别",
    "gui.modify.textType": "文本值",
    "gui.modify.numberType": "数字值",
    "gui.extension.knn.machineLearning": "机器学习",
    "gui.extension.weather.getWeather": "获取天气",
    "gui.extension.weather.description": "通过网络获取天气信息，电脑需要联网",
    "gui.extension.gestureRecognition": "手势识别",
    "gui.extension.gestureRecognition.description": "通过网络摄像头识别手势",
    "gui.modify.runPythonCode": "运行程序",
    "gui.extension.carMotor": "智能车",
    "gui.extension.fourLeggedBionicSpider": "四足仿生蜘蛛",
    "gui.extension.arm": "机械臂",
    "gui.modify.searchBlock": "搜索积木",
    "gui.modify.searchButton": "积木搜索",
    "gui.extension.bipedRobot.description": "双足机器人是一种模仿人类双腿行走的机器人，具备平衡控制和自主移动能力。",
    "gui.modify.installTheDriver": "一键安装串口驱动",
    "gui.extension.meteorologicalStation": "气象站",
    "gui.extension.chart": "数据图表",
    
    "gui.extension.smartHome.name": "智能家居",
    "gui.extension.smartFarm.name": "智能农场",
    "gui.extension.bluetoothController.name": "蓝牙手柄",
    "gui.modify.createSDK": "\nSDK生成中，大约需要1-3分钟，请耐心等待！......",
    "gui.modify.createSDKing": "生成中，大约需要1-3分钟，请耐心等待！......",
    "gui.modify.SDKSuccess": "\nSDK生成成功\n开始生成固件......",
    "gui.modify.createError": "\n生成失败，可能是配置原因，请检查配置",
    "gui.modify.createFirmwareing": "\n正在生成固件......",
    "gui.modify.firmwareSuccess": "\n固件生成成功......",
    "gui.modify.SDKing": "\n正在生成SDK......",
    "gui.modify.createFirmware": "生成固件",
    "gui.extension.ASR.name": "语音识别",
    "gui.extension.ASR.description": "搭建生成语音识别固件，并上传。",
    "gui.modify.parameter": "参数",
    "gui.modify.ChoosRole": "选择角色",
    "gui.modify.cameraWindow": "视频窗口",
    "gui.modify.closeFace": "已关闭人脸追踪",
    "gui.modify.closeGender": "已关闭识别性别",
    "gui.modify.runSeccess": "运行成功",
    "gui.modify.runError": "运行失败",
    "gui.modify.runing": "正在运行",
    "gui.modify.keepSuccess": "保存成功",
    "gui.modify.keepError": "保存失败",
    "gui.modify.keepErrorInfo": "积木保存失败，请检查积木",
    "gui.modify.sampleProgram": "示例程序",
    "gui.modify.jumpLink": "教程文档",
    "gui.extension.bluetoothControllerRealTime.name": "在线手柄",
    "gui.modify.sampleProgramErr": "示例程序不可更改，请保存新文件!",
    "gui.modify.microPython": "microPython固件",
    "gui.modify.mobile": "移动端固件",
    "CATEGORY_ROBOTS_BLE": "低功耗蓝牙",
    "gui.extension.PAW.name": "运动感应手套",
    "gui.modify.serialPortMappingInstrument": "串口测绘仪",
    "gui.extension.carMotor.description": "智能小车是一种集成传感器和控制系统的移动机器人，能够实现自动避障、巡线和远程控制等功能。",
    "gui.extension.mechanicalArm.description": "机械臂套件包含可编程的机械手臂，能够实现抓取、移动和操作物体的功能。",
    "gui.extension.meteorologicalStation.description": "气象站套件集成多种环境传感器，能够实时监测温度、湿度、气压和风速等气象参数。",
    "gui.extension.smartHome.description": "智能家居套件包含多种传感器和控制设备，帮助用户实现家庭环境的智能化管理。",
    "gui.extension.smartFarm.description": "智能农场套件是一套集成传感器和自动控制设备的系统，帮助监测土壤、温度、湿度等环境参数。",
    "gui.extension.PAW.description": "运动感应手套是一种可穿戴设备，能够通过传感器捕捉手部的动作和姿态。",
    "gui.extension.sharkbot.description": "一款带有语音识别的鲨鱼小车",
    "gui.extension.bluetoothController.description": "通用手柄接收模块",
    "gui.extension.chart.description": "将数据绘制成图表",
    "gui.extension.facialRecognition.description": "监测人脸,实现人脸识别、人脸追踪、性别检测",
    "gui.extension.knnClassifier.description": "图像分类模型的训练和识别",
    "gui.extension.fourLeggedBionicSpider.description": "四足仿生蜘蛛套件是一种模仿蜘蛛动作的四足机器人，具备灵活的运动能力和多样的行走模式。",
    "gui.extension.bipedRobot": "双足机器人"
  }
}

const alterAndAdd = (jsonData, path) => {
  let blockPath = path
  for (let [key, value] of Object.entries(jsonData)) {
    let path = blockPath + key + '.json'
    if (Object.keys(value).length) {
      fs.readFile(path, function (err, data) {
        if (err) {
          console.error(err)
          return
        }
        let json = JSON.parse(data.toString());

        for (let [index, item] of Object.entries(value)) {
          json[index] = item
        }
        json = JSON.stringify(json, null, '\t')
        fs.writeFile(path, json, function (err) {
          if (err) {
            console.error(err);
          }
          console.log('--------------------修改成功');
          console.log(jsonData);
        })
      })
    }
  }
}

alterAndAdd(block, './editor/blocks/')
alterAndAdd(extensions, './editor/extensions/')
alterAndAdd(interfaceData, './editor/interface/')

